<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
  <itemHash>bQ==</itemHash>
  <remoteResource>http://github.com/inspire-eu-validation/ets-repository/metadata/iso</remoteResource>
  <localPath>/auto</localPath>
  <label>Metadatenprofil GDI-NW für die Ressourcenart "Daten"</label>
  <description><![CDATA[Diese spezifische Profilausprägung für die Ressourcenart "Daten" (Datenbestand, Serie, Kachel, Objektart) berücksichtigt die Festlegungen für die vorgesehenen Elemente und ist gegenüber der ISO 19115 an den Stellen ausgedünnt, an denen die jeweiligen Elemente für diese Ressourcenart im NRW-Metadatenprofil nicht vorgesehen sind.]]></description>
  <reference>../../inspire-md-bsxets.xq</reference>
  <version>1.0.0</version>
  <author>Peter Kochmann (Gst. GDI-NW)</author>
  <creationDate>2021-04-06T19:24:17.517Z</creationDate>
  <lastEditor>Peter Kochmann (Gst. GDI-NW)</lastEditor>
  <lastUpdateDate>2022-03-16T09:25:14.554Z</lastUpdateDate>
  <tags>
    <tag ref="EIDfe1f3796-0ebf-4960-a6f7-f935e087fa4c"/>
  </tags>
  <testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
  <translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
  <ParameterList name="ETF Standard Parameters for XML test objects">
    <parameter name="files_to_test" required="true">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
    <parameter name="tests_to_execute" required="false">
      <defaultValue>.*</defaultValue>
      <allowedValues>.*</allowedValues>
      <type>string</type>
    </parameter>
  </ParameterList>
  <supportedTestObjectTypes>
    <testObjectType ref="EID5a60dded-0cb0-4977-9b06-16c6c2321d2e"/>
  </supportedTestObjectTypes>
  <testModules>
    <TestModule id="EID2f5bc1e4-139b-4859-ab7a-512976a122dc">
      <label>MD_Medium</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDf83b33e8-ba01-4bc1-bf93-90ba996b0d7b">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID3278ca8a-77b4-47f5-8a37-2f994f6c667e">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EIDf83b33e8-ba01-4bc1-bf93-90ba996b0d7b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6a1151ce-71af-4ec4-8aba-9e40fc26a1f5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dvdRom</li><li>dvd</li><li>cdRom</li><li>onLine</li></ul>]]></description>
                  <parent ref="EID3278ca8a-77b4-47f5-8a37-2f994f6c667e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dvdRom', 'dvd', 'cdRom', 'onLine')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'name', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1675a3ab-d1ee-4cb5-b446-0dc8d1e1cd89">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID72e8f004-b114-4b5b-8b7e-d2ca4ebba761">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EID1675a3ab-d1ee-4cb5-b446-0dc8d1e1cd89"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID360a6d00-289b-4b54-8cb6-6b828c68803f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID72e8f004-b114-4b5b-8b7e-d2ca4ebba761"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf8e77973-955d-47bb-8a6c-6dfdb3661da9">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID176b2e73-5d56-4e32-813e-c30073bcb766">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EIDf8e77973-955d-47bb-8a6c-6dfdb3661da9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDafeaf6d1-4a1f-4eea-9a1c-fc74052b140b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID176b2e73-5d56-4e32-813e-c30073bcb766"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'name', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8ece6b1d-a118-4866-bfbd-7248ac1b663b">
          <label>ISO-Element Nr. 293: density</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID7aa4a1bc-eaa1-468d-b754-9d7de1b8aea6">
              <label>ISO-Element Nr. 293: density</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID8ece6b1d-a118-4866-bfbd-7248ac1b663b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4902630b-c1c8-4bf5-8da8-1068e032191b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'density' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID7aa4a1bc-eaa1-468d-b754-9d7de1b8aea6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='density' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDab264427-1fe0-4a0c-9775-3f78ec0263dd">
          <label>ISO-Element Nr. 294: densityUnits</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID894de100-340a-46f6-bb58-647ccd5d87db">
              <label>ISO-Element Nr. 294: densityUnits</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDab264427-1fe0-4a0c-9775-3f78ec0263dd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID014395ff-3e5f-4cb0-99ab-e541c6e374f4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'densityUnits' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID894de100-340a-46f6-bb58-647ccd5d87db"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='densityUnits' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID79a229f1-405b-47e2-8d85-b2b8725bbb57">
          <label>ISO-Element Nr. 295: volumes</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EIDd2e6c14b-d970-47be-9145-56498a259b0c">
              <label>ISO-Element Nr. 295: volumes</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID79a229f1-405b-47e2-8d85-b2b8725bbb57"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7e12b184-a843-43e4-91b6-b41f292a2487">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'volumes' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDd2e6c14b-d970-47be-9145-56498a259b0c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='volumes' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7eb75668-545c-4cdf-9223-96faad3f83f6">
          <label>ISO-Element Nr. 296: medium­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID64561672-232f-4192-ba28-3ec584321632">
              <label>ISO-Element Nr. 296: medium­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID7eb75668-545c-4cdf-9223-96faad3f83f6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9e32b184-86f7-4397-8bf6-88a3f5ac08d4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'mediumFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>iso9660RockRidge</li><li>cpio</li><li>iso9660AppleHFS</li><li>iso9660</li><li>tar</li><li>highSierra</li></ul>]]></description>
                  <parent ref="EID64561672-232f-4192-ba28-3ec584321632"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('iso9660RockRidge', 'cpio', 'iso9660AppleHFS', 'iso9660', 'tar', 'highSierra')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='mediumFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'mediumFormat', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1f2c41a9-c8af-4cf2-a2ec-d78c6def1210">
          <label>ISO-Element Nr. 296: medium­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID2f5bc1e4-139b-4859-ab7a-512976a122dc"/>
          <testSteps>
            <TestStep id="EID38693001-9c46-45b4-97d6-a2c92587da9e">
              <label>ISO-Element Nr. 296: medium­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1f2c41a9-c8af-4cf2-a2ec-d78c6def1210"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4cd45047-6224-43a0-9cfa-ac4e5fe7996a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'mediumFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID38693001-9c46-45b4-97d6-a2c92587da9e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Medium' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='mediumFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Medium', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID601eae65-2f54-4b91-a651-5424e2de0059">
      <label>DQ_Scope</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID68417a08-9976-42b6-91f7-42e350de4c7b">
          <label>ISO-Element Nr. 139: Bezugsebene im Geltungsbereich der Qualitätssaussage</label>
          <description><![CDATA[Pflichtelement in Qualitätssaussagen: die Information über die Bezugsebene muss vorhanden sein; der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (nur "dataset", "series",  "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID601eae65-2f54-4b91-a651-5424e2de0059"/>
          <testSteps>
            <TestStep id="EID7ae725f5-ba3e-465b-99a4-40d53e361910">
              <label>ISO-Element Nr. 139: Bezugsebene im Geltungsbereich der Qualitätssaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätssaussagen: die Information über die Bezugsebene muss vorhanden sein; der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (nur "dataset", "series",  "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EID68417a08-9976-42b6-91f7-42e350de4c7b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID56b1b553-1924-42f7-8dcb-8d7680d409b2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'level' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>tile</li><li>featureType</li></ul>]]></description>
                  <parent ref="EID7ae725f5-ba3e-465b-99a4-40d53e361910"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'tile', 'featureType')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'DQ_Scope', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'level', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID99e6922d-4332-402c-b2d2-2f4dfdedf4c5">
          <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
          <parent ref="EID601eae65-2f54-4b91-a651-5424e2de0059"/>
          <testSteps>
            <TestStep id="EIDc802282f-2b40-403b-a174-40f90879c4e0">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID99e6922d-4332-402c-b2d2-2f4dfdedf4c5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe89af84a-ce9f-43dc-b465-24c3cb76add3">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDc802282f-2b40-403b-a174-40f90879c4e0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4b2c24e3-5687-40ac-97cf-d046d4f63391">
          <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
          <parent ref="EID601eae65-2f54-4b91-a651-5424e2de0059"/>
          <testSteps>
            <TestStep id="EIDeedaa870-d8c6-4340-a5bb-4c28394c5767">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID4b2c24e3-5687-40ac-97cf-d046d4f63391"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd11dac03-a71b-49a6-8dac-c40d2e2e5cb5">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDeedaa870-d8c6-4340-a5bb-4c28394c5767"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID28249de8-db8e-46e0-b9d3-96ef5808c8d3">
          <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
          <parent ref="EID601eae65-2f54-4b91-a651-5424e2de0059"/>
          <testSteps>
            <TestStep id="EIDc5c193dc-c158-4708-98a4-f11c5fc8280b">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID28249de8-db8e-46e0-b9d3-96ef5808c8d3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4822c3fb-0b97-452b-8c33-2f70bb2380a7">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDc5c193dc-c158-4708-98a4-f11c5fc8280b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID33ee2801-7bad-47ae-90f8-22bcda994b48">
          <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
          <parent ref="EID601eae65-2f54-4b91-a651-5424e2de0059"/>
          <testSteps>
            <TestStep id="EIDf5395302-18ee-460e-bc90-36a4180db0c2">
              <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
              <parent ref="EID33ee2801-7bad-47ae-90f8-22bcda994b48"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb7864c4d-8c61-4f0f-a17b-a1e9248e301e">
                  <label>ISO-Element Nr. 141: Ebenenbeschreibung</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_Scope: bei einem anderen Wert als "dataset" oder "series" für Element level ist Element levelDescription zwingend zu belegen.]]></description>
                  <parent ref="EIDf5395302-18ee-460e-bc90-36a4180db0c2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='level' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'levelDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDea00f589-24d1-44c9-9408-2f3d3374ee71">
      <label>MD_ReferenceSystem</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDa87ce99b-51ec-4c6c-a100-7646c2c1c99b">
          <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
          <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
          <parent ref="EIDea00f589-24d1-44c9-9408-2f3d3374ee71"/>
          <testSteps>
            <TestStep id="EID72d32715-3dbd-4ffe-99ec-e40b5602ff2a">
              <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
              <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
              <parent ref="EIDa87ce99b-51ec-4c6c-a100-7646c2c1c99b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa2b0f761-e264-4c01-9221-c7f11851f11a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID72d32715-3dbd-4ffe-99ec-e40b5602ff2a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ReferenceSystem', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3c47886c-2d30-47ef-b16b-135aea87749f">
          <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
          <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
          <parent ref="EIDea00f589-24d1-44c9-9408-2f3d3374ee71"/>
          <testSteps>
            <TestStep id="EID92198e84-e3e3-48a9-a998-f44fa7e64cd3">
              <label>ISO-Element Nr. 187: Identifikator des Referenzsystems</label>
              <description><![CDATA[Pflichtelement in Angaben zum Referenzsystem: die Angabe des Identifikators muss vorhanden sein.]]></description>
              <parent ref="EID3c47886c-2d30-47ef-b16b-135aea87749f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3d7a790f-c396-4603-b7b9-387f343a9954">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID92198e84-e3e3-48a9-a998-f44fa7e64cd3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'referenceSystemIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID353da6d6-b4fa-4338-a480-ee9511a53216">
      <label>DQ_DomainConsistency</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID21a9c45a-452e-4ff4-a224-527552d74431">
          <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID353da6d6-b4fa-4338-a480-ee9511a53216"/>
          <testSteps>
            <TestStep id="EID341954c0-817b-4156-bc30-e6d7ab441cd1">
              <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID21a9c45a-452e-4ff4-a224-527552d74431"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe73122b0-b8cf-4044-96ef-c01958540f35">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID341954c0-817b-4156-bc30-e6d7ab441cd1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID57c99af1-55f9-4762-a245-97731c6965c7">
          <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID353da6d6-b4fa-4338-a480-ee9511a53216"/>
          <testSteps>
            <TestStep id="EID2367b9af-6eaa-4842-a597-a67d3d5ff314">
              <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID57c99af1-55f9-4762-a245-97731c6965c7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe4d9c820-57e5-4cdc-be4a-70e4449512e8">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID2367b9af-6eaa-4842-a597-a67d3d5ff314"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4511dcde-0805-47b2-9268-2f7243e55761">
          <label>ISO-Element Nr. 105: evaluation­Procedure</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID353da6d6-b4fa-4338-a480-ee9511a53216"/>
          <testSteps>
            <TestStep id="EID30fc20cb-61d2-4c34-b6fb-f7648968d900">
              <label>ISO-Element Nr. 105: evaluation­Procedure</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4511dcde-0805-47b2-9268-2f7243e55761"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb60d25d2-2215-4609-b878-091f6ccfb7cb">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationProcedure' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID30fc20cb-61d2-4c34-b6fb-f7648968d900"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationProcedure' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID85cab5b4-bdd4-4ae7-a48c-8f74750fd518">
          <label>ISO-Element Nr. 106: date­Time</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID353da6d6-b4fa-4338-a480-ee9511a53216"/>
          <testSteps>
            <TestStep id="EIDf78271d1-750c-4646-9275-2383df126170">
              <label>ISO-Element Nr. 106: date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID85cab5b4-bdd4-4ae7-a48c-8f74750fd518"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID86e01b17-b549-497e-9788-42fa2feb8716">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf78271d1-750c-4646-9275-2383df126170"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4235bd4c-3364-4210-9cd9-3548e17de20e">
          <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
          <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
          <parent ref="EID353da6d6-b4fa-4338-a480-ee9511a53216"/>
          <testSteps>
            <TestStep id="EID920e6759-8df4-4a69-8388-425ff6ffdd90">
              <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
              <parent ref="EID4235bd4c-3364-4210-9cd9-3548e17de20e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4e177b29-4fb8-4a74-a4c8-75b49db6422e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'result' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID920e6759-8df4-4a69-8388-425ff6ffdd90"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_DomainConsistency' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_DomainConsistency', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDa66e5946-38f3-4635-b23e-160afad233b2">
      <label>CI_Citation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDf661dad7-7fe0-4ae3-8f50-8a3e5f335cf8">
          <label>ISO-Element Nr. 363: edition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID11df968b-4991-43a8-961d-4524efa5de72">
              <label>ISO-Element Nr. 363: edition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf661dad7-7fe0-4ae3-8f50-8a3e5f335cf8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdc176e94-4725-428b-bc16-126f208c149f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'edition' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID11df968b-4991-43a8-961d-4524efa5de72"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='edition' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd818ec28-6f2b-4b38-a7cb-93e380f36605">
          <label>ISO-Element Nr. 364: edition­Date</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EIDab3968d1-c193-432b-a919-56be0c3efbe0">
              <label>ISO-Element Nr. 364: edition­Date</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDd818ec28-6f2b-4b38-a7cb-93e380f36605"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID768aef65-574f-458e-939e-19807ad041bc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'editionDate' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDab3968d1-c193-432b-a919-56be0c3efbe0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='editionDate' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa210c067-9444-4a40-8e14-e478f35a5c57">
          <label>ISO-Element Nr. 367: cited­Responsible­Party</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID0db29af6-8218-4e81-b35b-f1ccecf4aff3">
              <label>ISO-Element Nr. 367: cited­Responsible­Party</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa210c067-9444-4a40-8e14-e478f35a5c57"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2c65779b-989a-43d4-90a8-cff903c3f395">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'citedResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID0db29af6-8218-4e81-b35b-f1ccecf4aff3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='citedResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDabfd7bc6-412f-49f2-8a3a-31d8e9ae2d17">
          <label>ISO-Element Nr. 368: Präsentationsform</label>
          <description><![CDATA[Werteumfang eingeschränkt: nicht alle Werte gem. ISO 19115 sind hier zulässig.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID0e93bac4-890b-4536-9816-2cfd4691c8ec">
              <label>ISO-Element Nr. 368: Präsentationsform</label>
              <description><![CDATA[Werteumfang eingeschränkt: nicht alle Werte gem. ISO 19115 sind hier zulässig.]]></description>
              <parent ref="EIDabfd7bc6-412f-49f2-8a3a-31d8e9ae2d17"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID97fe4e7c-3a22-4501-8321-e573511378b0">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'presentationForm' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>mapHardcopy</li><li>profileHardcopy</li><li>documentDigital</li><li>modelDigital</li><li>documentHardcopy</li><li>modelHardcopy</li><li>mapDigital</li><li>profileDigital</li><li>imageHardcopy</li><li>tableDigital</li><li>imageDigital</li><li>tableHardcopy</li></ul>]]></description>
                  <parent ref="EID0e93bac4-890b-4536-9816-2cfd4691c8ec"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('mapHardcopy', 'profileHardcopy', 'documentDigital', 'modelDigital', 'documentHardcopy', 'modelHardcopy', 'mapDigital', 'profileDigital', 'imageHardcopy', 'tableDigital', 'imageDigital', 'tableHardcopy')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='presentationForm' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'presentationForm', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4683904c-73d6-4ebb-8407-5c260d011b1d">
          <label>ISO-Element aus MD_Metadata: series</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EIDd47397d8-f762-4c2b-97e9-7d412f468006">
              <label>ISO-Element aus MD_Metadata: series</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4683904c-73d6-4ebb-8407-5c260d011b1d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa1a56c7e-e2c1-4bc4-af60-4612d9210ff8">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'series' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDd47397d8-f762-4c2b-97e9-7d412f468006"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='series' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID91a198a5-a699-4297-b0aa-39d823139af5">
          <label>ISO-Element Nr. 371: collective­Title</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID3104b953-0281-4572-af8f-c6ee483879d2">
              <label>ISO-Element Nr. 371: collective­Title</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID91a198a5-a699-4297-b0aa-39d823139af5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3f246a68-2566-42d1-ac47-fe272b68e3e8">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'collectiveTitle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID3104b953-0281-4572-af8f-c6ee483879d2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='collectiveTitle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8b8309c5-002b-4358-853c-234d6c7714af">
          <label>ISO-Element Nr. 373: I­SS­N</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EIDc3e81aab-8319-4964-89f0-03b98defe979">
              <label>ISO-Element Nr. 373: I­SS­N</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID8b8309c5-002b-4358-853c-234d6c7714af"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc9adb086-6993-4daf-9378-76d381ee8f02">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'ISSN' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc3e81aab-8319-4964-89f0-03b98defe979"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='ISSN' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID13175912-f310-4f8a-9e79-aa55b8ebe583">
          <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID615aaa82-f672-4dc7-b85c-d8dd19b8a6d2">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID13175912-f310-4f8a-9e79-aa55b8ebe583"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID41774343-b1d3-4e5b-b5df-abecc018e8cd">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID615aaa82-f672-4dc7-b85c-d8dd19b8a6d2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1f950170-62b0-4717-9442-d4af50b439d4">
          <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID8614253e-eb78-4006-89a2-b10a426ba61d">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID1f950170-62b0-4717-9442-d4af50b439d4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID16e62078-6a9e-4756-8a07-b296621b67ce">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID8614253e-eb78-4006-89a2-b10a426ba61d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc6e15180-a297-452f-b6c7-ef0767c10f18">
          <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EID6a4b236b-5db4-4839-a82f-47930fcccb3a">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EIDc6e15180-a297-452f-b6c7-ef0767c10f18"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID21b2ec7d-6d5a-49d0-b8c2-3b8d998246fb">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EID6a4b236b-5db4-4839-a82f-47930fcccb3a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID170a6b93-1b2e-48b0-a5ad-44b995a7391b">
          <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
          <parent ref="EIDa66e5946-38f3-4635-b23e-160afad233b2"/>
          <testSteps>
            <TestStep id="EIDa69d5674-4809-4eb1-adbe-49839d7d3564">
              <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
              <parent ref="EID170a6b93-1b2e-48b0-a5ad-44b995a7391b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd3f2e93e-3557-4b75-8d22-bf1c48755433">
                  <label>ISO-Element Nr. 365: Identifikator für die Ressource</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Citation: bei Aufruf über Element citation (ISO-Nr. 24) muss das Element identifier belegt sein.]]></description>
                  <parent ref="EIDa69d5674-4809-4eb1-adbe-49839d7d3564"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID47fcf7fd-f90b-432e-a290-9f0ee33dcffe">
      <label>LI_Lineage</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID1fa0853c-0b4e-42e3-b1b9-d70785ce0365">
          <label>ISO-Element Nr. 82: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in LI_Lineage: eines der Elemente statement, processStep oder source muss belegt sein.]]></description>
          <parent ref="EID47fcf7fd-f90b-432e-a290-9f0ee33dcffe"/>
          <testSteps>
            <TestStep id="EIDd30a383b-b286-4d33-99d9-43f58667a797">
              <label>ISO-Element Nr. 82: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in LI_Lineage: eines der Elemente statement, processStep oder source muss belegt sein.]]></description>
              <parent ref="EID1fa0853c-0b4e-42e3-b1b9-d70785ce0365"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID709210f4-1190-40ca-b8cb-22dea6f6cab1">
                  <label>ISO-Element Nr. 82: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in LI_Lineage: eines der Elemente statement, processStep oder source muss belegt sein.]]></description>
                  <parent ref="EIDd30a383b-b286-4d33-99d9-43f58667a797"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='statement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'statement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='processStep' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'processStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='LI_Lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='source' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0)) then ()
   else ($messages0, $messages1, $messages2)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDf98ec229-f229-441d-b3c9-8d5ea8057426">
      <label>RS_Identifier</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID2369336b-ec5d-4714-b69e-81d89e4d1803">
          <label>ISO-Element Nr. 206: authority</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDf98ec229-f229-441d-b3c9-8d5ea8057426"/>
          <testSteps>
            <TestStep id="EIDc58aabe9-91d4-4153-ba32-46b099201dca">
              <label>ISO-Element Nr. 206: authority</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID2369336b-ec5d-4714-b69e-81d89e4d1803"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID69b7f6b6-6c76-40b6-b085-f5e3b30f4083">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'authority' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDc58aabe9-91d4-4153-ba32-46b099201dca"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='authority' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'RS_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID40fad1aa-e941-4b03-8cf3-3a186724e23d">
          <label>ISO-Element Nr. 208.2: Version des Namensraums zum Identifikator des Referenzsystems</label>
          <description><![CDATA[bedingtes Pflichtelement in RS_Identifier: bei Belegung des Elements codeSpace muss das Element version ebenfalls belegt sein.]]></description>
          <parent ref="EIDf98ec229-f229-441d-b3c9-8d5ea8057426"/>
          <testSteps>
            <TestStep id="EID7d286cf2-cee1-4900-a5b3-9decf57e7c6e">
              <label>ISO-Element Nr. 208.2: Version des Namensraums zum Identifikator des Referenzsystems</label>
              <description><![CDATA[bedingtes Pflichtelement in RS_Identifier: bei Belegung des Elements codeSpace muss das Element version ebenfalls belegt sein.]]></description>
              <parent ref="EID40fad1aa-e941-4b03-8cf3-3a186724e23d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1f7298e7-7e56-4f9e-8feb-ce2181b16d6b">
                  <label>ISO-Element Nr. 208.2: Version des Namensraums zum Identifikator des Referenzsystems</label>
                  <description><![CDATA[bedingtes Pflichtelement in RS_Identifier: bei Belegung des Elements codeSpace muss das Element version ebenfalls belegt sein.]]></description>
                  <parent ref="EID7d286cf2-cee1-4900-a5b3-9decf57e7c6e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='codeSpace' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='version' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'version', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID688c1a3f-cd38-4359-88be-6e8e56a102d7">
      <label>MD_Metadata</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID35231148-5df9-4a37-95c5-87403d1a64a5">
          <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
          <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDcbf2302a-0712-4db9-be45-337aee585ae7">
              <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
              <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
              <parent ref="EID35231148-5df9-4a37-95c5-87403d1a64a5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID52c9d7d6-04ad-41ae-9358-fc802cff2144">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'fileIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDcbf2302a-0712-4db9-be45-337aee585ae7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID30ca647a-b3cb-4014-b2b5-a664e33f5abb">
          <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
          <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDc2215aea-0f75-49f8-881e-b0010d2bd312">
              <label>ISO-Element Nr. 2: Metadatensatzidentifikator</label>
              <description><![CDATA[Pflichtelement: der Metadatensatzidentifikator muss belegt sein.]]></description>
              <parent ref="EID30ca647a-b3cb-4014-b2b5-a664e33f5abb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd671c49e-968a-4ca8-b62f-db5e355a051f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'fileIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDc2215aea-0f75-49f8-881e-b0010d2bd312"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'fileIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID348197f9-3ace-42ee-95da-06155b2a9c75">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID7bb9ecf9-deec-417f-be4d-416df39b2b90">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID348197f9-3ace-42ee-95da-06155b2a9c75"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbbbe9e00-57a3-49a9-8606-fd8cd622767d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID7bb9ecf9-deec-417f-be4d-416df39b2b90"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9a03653a-3071-4aae-88fa-d78880cdde79">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID598e62e3-7dd5-458a-95ea-c7ace7d98ae9">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID9a03653a-3071-4aae-88fa-d78880cdde79"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbdf017a1-304d-4622-95f2-3d9f6de93b1c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID598e62e3-7dd5-458a-95ea-c7ace7d98ae9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'language', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4682d341-e31e-420d-b06d-9aaa6b1b4131">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID8c4ee57d-ecaa-46bb-9863-e1a6c569dc9a">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
              <parent ref="EID4682d341-e31e-420d-b06d-9aaa6b1b4131"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID241fd3d6-1aee-4a36-b16a-7b2d708406dc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>8859part1</li><li>utf8</li></ul>]]></description>
                  <parent ref="EID8c4ee57d-ecaa-46bb-9863-e1a6c569dc9a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('8859part1', 'utf8')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'characterSet', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDab1549b4-1a04-412d-bf4f-ea6730edb660">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDec362013-9904-47b6-aa61-a197ffe76c47">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
              <parent ref="EIDab1549b4-1a04-412d-bf4f-ea6730edb660"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7c109c0d-6662-4aa9-8de8-e5aaa7c976f1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDec362013-9904-47b6-aa61-a197ffe76c47"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3e1370dc-dfe9-4615-9b0b-fcf014e4b3e5">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDc40cba8a-4e23-4e62-be43-f426b9abafab">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
              <parent ref="EID3e1370dc-dfe9-4615-9b0b-fcf014e4b3e5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID79939c73-8e4d-42ad-a69d-3bdf1d7c87f4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDc40cba8a-4e23-4e62-be43-f426b9abafab"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'characterSet', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID739cc84d-2f9f-401d-a427-10012da01953">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID8ef25815-c6f4-44b1-bd6f-0a27ac21956f">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EID739cc84d-2f9f-401d-a427-10012da01953"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3aa98b55-e968-4018-afe4-1559d2b611da">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>tile</li><li>featureType</li></ul>]]></description>
                  <parent ref="EID8ef25815-c6f4-44b1-bd6f-0a27ac21956f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'tile', 'featureType')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'hierarchyLevel', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDaa1f28fe-aabf-4a78-87e7-d8e69a0c1458">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID8a4ff238-0c54-4e6f-bf68-57c49edd0ce8">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EIDaa1f28fe-aabf-4a78-87e7-d8e69a0c1458"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDca394e9f-45eb-4c9e-8cf7-95ec88c7ae25">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID8a4ff238-0c54-4e6f-bf68-57c49edd0ce8"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe0c75c3b-0632-41c0-bb5f-3160d3252c4b">
          <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
          <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID895fc608-4a56-4b02-9418-123e4fea3d4d">
              <label>ISO-Element Nr. 6: Hierarchieebene des Metadatensatzes</label>
              <description><![CDATA[Pflichtelement: die Hierarchieebene des Metadatensatzes muss belegt sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EIDe0c75c3b-0632-41c0-bb5f-3160d3252c4b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID07d85c92-5aec-466b-910f-1577a6acd3dc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hierarchyLevel' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID895fc608-4a56-4b02-9418-123e4fea3d4d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'hierarchyLevel', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7d368730-df46-4d80-89b1-a9ca2d08ea5a">
          <label>ISO-Element Nr. 11.1: data­Set­UR­I</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID8d50c277-97be-431f-8e06-d2782423853e">
              <label>ISO-Element Nr. 11.1: data­Set­UR­I</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID7d368730-df46-4d80-89b1-a9ca2d08ea5a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID43bc651f-0a17-46a9-b667-969510118fc4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dataSetURI' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8d50c277-97be-431f-8e06-d2782423853e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dataSetURI' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc513dae6-23df-4018-876b-9efd9c507c44">
          <label>ISO-Element Nr. 11.2: locale</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID1711cf53-4e92-4f6f-b2aa-30828198ee63">
              <label>ISO-Element Nr. 11.2: locale</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDc513dae6-23df-4018-876b-9efd9c507c44"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa4d8b060-e92f-46f0-85d6-08361d1607de">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'locale' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1711cf53-4e92-4f6f-b2aa-30828198ee63"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='locale' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID765d53c5-7836-480b-9658-4654205ed12c">
          <label>ISO-Element Nr. 12: spatial­Representation­Info</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID1523f764-75db-49a4-9bd7-1334e7fcb435">
              <label>ISO-Element Nr. 12: spatial­Representation­Info</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID765d53c5-7836-480b-9658-4654205ed12c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7a8cf9f8-30fb-469b-aeae-669a48c107df">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1523f764-75db-49a4-9bd7-1334e7fcb435"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='spatialRepresentationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5d1dfed1-7fe8-42b9-8333-1365f0afc593">
          <label>ISO-Element Nr. 13: Bezugssystem</label>
          <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDcc865086-f592-4fd4-a4f0-e75f8e94f086">
              <label>ISO-Element Nr. 13: Bezugssystem</label>
              <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
              <parent ref="EID5d1dfed1-7fe8-42b9-8333-1365f0afc593"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID203ecb0e-9b62-47fe-8bbb-2b7ba2371c61">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDcc865086-f592-4fd4-a4f0-e75f8e94f086"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID970f04f8-fb1f-4af5-af96-22da189ac144">
          <label>ISO-Element Nr. 13: Bezugssystem</label>
          <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID7f7082d4-38a4-46c8-9d0b-c607b30a20f3">
              <label>ISO-Element Nr. 13: Bezugssystem</label>
              <description><![CDATA[Pflichtelement: mindestens ein Bezugssystem muss angegeben sein.]]></description>
              <parent ref="EID970f04f8-fb1f-4af5-af96-22da189ac144"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0dbb79a9-07d1-4721-b7f2-ec4ff6120976">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'referenceSystemInfo' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID7f7082d4-38a4-46c8-9d0b-c607b30a20f3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='referenceSystemInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'referenceSystemInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID65ef044b-5225-4856-8290-e096cffcdbdb">
          <label>ISO-Element Nr. 15: Angaben zu den Daten</label>
          <description><![CDATA[Pflichtelement: die Angaben zu den Daten müssen belegt sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDa897db42-9842-42b5-a007-9e927ede734e">
              <label>ISO-Element Nr. 15: Angaben zu den Daten</label>
              <description><![CDATA[Pflichtelement: die Angaben zu den Daten müssen belegt sein.]]></description>
              <parent ref="EID65ef044b-5225-4856-8290-e096cffcdbdb"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbe241b94-d8a5-4953-b25e-43ab470acbec">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'identificationInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDa897db42-9842-42b5-a007-9e927ede734e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID73d920c3-95f2-47c9-a116-2f6c6855955b">
          <label>ISO-Element Nr. 18: Qualitätsaussage</label>
          <description><![CDATA[Pflichtelement: mindestens eine Qualitätsaussage muss vorhanden sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID19fddfc1-0cb3-40b5-b554-f7667d2fa447">
              <label>ISO-Element Nr. 18: Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement: mindestens eine Qualitätsaussage muss vorhanden sein.]]></description>
              <parent ref="EID73d920c3-95f2-47c9-a116-2f6c6855955b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID48a2b2ad-d259-439b-a679-23fe3a36ef9e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dataQualityInfo' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID19fddfc1-0cb3-40b5-b554-f7667d2fa447"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID38e5076c-09a0-419b-8b07-2129b16fceef">
          <label>ISO-Element Nr. 18: Qualitätsaussage</label>
          <description><![CDATA[Pflichtelement: mindestens eine Qualitätsaussage muss vorhanden sein.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDe9a0b183-7a63-463d-9185-879c5320b89f">
              <label>ISO-Element Nr. 18: Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement: mindestens eine Qualitätsaussage muss vorhanden sein.]]></description>
              <parent ref="EID38e5076c-09a0-419b-8b07-2129b16fceef"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0af49532-5c66-4df3-bcd2-3496f26d6148">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dataQualityInfo' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDe9a0b183-7a63-463d-9185-879c5320b89f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'dataQualityInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa39535b1-1053-4a56-9d4b-da4b4c92b545">
          <label>ISO-Element Nr. 20: metadata­Constraints</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID10c450ef-8bb7-47ee-9655-d6521647f9e0">
              <label>ISO-Element Nr. 20: metadata­Constraints</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa39535b1-1053-4a56-9d4b-da4b4c92b545"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID44f8d1b7-ffa5-4764-91d4-1f781b442db8">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'metadataConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID10c450ef-8bb7-47ee-9655-d6521647f9e0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='metadataConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3389182a-5f15-4005-a98d-f2ac1ce5cad3">
          <label>ISO-Element Nr. 22: metadata­Maintenance</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID373ba1fe-f204-4b2f-ab61-679f3321478a">
              <label>ISO-Element Nr. 22: metadata­Maintenance</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3389182a-5f15-4005-a98d-f2ac1ce5cad3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDab3f85cf-b1cd-46ab-94a3-4c83f0426830">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'metadataMaintenance' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID373ba1fe-f204-4b2f-ab61-679f3321478a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='metadataMaintenance' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5684079d-259c-4455-8e89-bfe80af94a6a">
          <label>ISO-Element aus MD_Metadata: series</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID89516469-57e1-46dd-845d-1dc4ad729454">
              <label>ISO-Element aus MD_Metadata: series</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID5684079d-259c-4455-8e89-bfe80af94a6a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbf6fc541-198a-4566-a759-a27dd271d347">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'series' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID89516469-57e1-46dd-845d-1dc4ad729454"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='series' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcc67f458-2cef-4d8d-83ba-03fd733bd785">
          <label>ISO-Element aus MD_Metadata: describes</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID9316f1fe-2fa1-4709-a7f0-b68029eb1566">
              <label>ISO-Element aus MD_Metadata: describes</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDcc67f458-2cef-4d8d-83ba-03fd733bd785"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0261dea3-904a-409e-b00d-7f6f0596b1aa">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'describes' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9316f1fe-2fa1-4709-a7f0-b68029eb1566"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='describes' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7730d9cf-e751-413e-95a3-65bfa2dd30bd">
          <label>ISO-Element aus MD_Metadata: property­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID549c3050-0dd9-49c9-90eb-05d3970a24a6">
              <label>ISO-Element aus MD_Metadata: property­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID7730d9cf-e751-413e-95a3-65bfa2dd30bd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2af3307c-3289-417e-a8ca-37cedb68ad9e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'propertyType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID549c3050-0dd9-49c9-90eb-05d3970a24a6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='propertyType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf719d032-6d0e-4974-8f18-73ae214da2d2">
          <label>ISO-Element aus MD_Metadata: feature­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID24fde866-a861-4d7b-8f6b-86232ff869f4">
              <label>ISO-Element aus MD_Metadata: feature­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf719d032-6d0e-4974-8f18-73ae214da2d2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdda43d05-2efa-4efe-a100-9c2ac85569d2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'featureType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID24fde866-a861-4d7b-8f6b-86232ff869f4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='featureType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf15632bc-211b-4e5b-b4ea-858d30e13e71">
          <label>ISO-Element aus MD_Metadata: feature­Attribute</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDb240eb8f-2f6b-477a-a004-7213a27c3c5e">
              <label>ISO-Element aus MD_Metadata: feature­Attribute</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf15632bc-211b-4e5b-b4ea-858d30e13e71"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2d85fd88-a0a9-4491-903a-fc67516a57af">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'featureAttribute' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDb240eb8f-2f6b-477a-a004-7213a27c3c5e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='featureAttribute' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc9074a73-630d-4db8-a1ec-0cbfbc389926">
          <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDef9f9439-2cd8-4aef-8ec0-8a24a3701726">
              <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
              <parent ref="EIDc9074a73-630d-4db8-a1ec-0cbfbc389926"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6ea429fd-1c85-4bb3-9000-b515afa1ee89">
                  <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
                  <parent ref="EIDef9f9439-2cd8-4aef-8ec0-8a24a3701726"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd' and text()='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='hierarchyLevelName' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'hierarchyLevelName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1fd6683a-2349-448d-a25b-8f03644b88c7">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID1417fde5-39da-45fa-acce-14c457cd9803">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EID1fd6683a-2349-448d-a25b-8f03644b88c7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5139e4c7-3551-4cc9-97ae-b1e610e6f75a">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EID1417fde5-39da-45fa-acce-14c457cd9803"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2350613f-4eb1-4b8f-a361-dd76a3852b1d">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDc224ab84-97bf-49ad-b767-27847bfd0430">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EID2350613f-4eb1-4b8f-a361-dd76a3852b1d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID021384a7-78da-4632-bdbe-5a7a631196fd">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EIDc224ab84-97bf-49ad-b767-27847bfd0430"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDab6982d1-ebbc-4c9d-b2d2-8b6f42941798">
          <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID80a0bc82-630c-497c-b768-b0a5a72cc3e4">
              <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
              <parent ref="EIDab6982d1-ebbc-4c9d-b2d2-8b6f42941798"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5cd42b89-d6ec-4128-a33c-5e0ef30a17dc">
                  <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
                  <parent ref="EID80a0bc82-630c-497c-b768-b0a5a72cc3e4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='parentIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'parentIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDfe89cff3-e060-48ba-94da-dfa2bbebd164">
          <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID294df9a1-e53b-4828-9148-eaca41cb3be4">
              <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
              <parent ref="EIDfe89cff3-e060-48ba-94da-dfa2bbebd164"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDed6395ea-7d13-4f68-8bcf-39a666ea7542">
                  <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
                  <parent ref="EID294df9a1-e53b-4828-9148-eaca41cb3be4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd' and text()='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='hierarchyLevelName' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'hierarchyLevelName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbb52e0fe-bbd6-4a9a-a6ac-9ff151fd3e17">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDf267d0f8-238b-43bf-a879-dc76d737bb62">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EIDbb52e0fe-bbd6-4a9a-a6ac-9ff151fd3e17"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0fc386b3-cad3-4da4-b2e6-0ed6b88d6fae">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EIDf267d0f8-238b-43bf-a879-dc76d737bb62"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID92254b69-cdfc-4f8c-a335-60801baea871">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID97d22368-f22d-475c-b57a-bc50cb5d1e25">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EID92254b69-cdfc-4f8c-a335-60801baea871"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID13b98714-6670-43cc-861a-b3177a61b0eb">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EID97d22368-f22d-475c-b57a-bc50cb5d1e25"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1c3271b0-a779-4328-bed3-eb553c914587">
          <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDa63444f8-7738-4d6f-98c7-681e1c30f8c3">
              <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
              <parent ref="EID1c3271b0-a779-4328-bed3-eb553c914587"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1c9c8524-179b-43e2-b838-2f475ff13194">
                  <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
                  <parent ref="EIDa63444f8-7738-4d6f-98c7-681e1c30f8c3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='parentIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'parentIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID14be7570-c8c0-4595-bb63-d75731fe4549">
          <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID9b32bf8b-1735-45d1-a8f8-8fddc297dd55">
              <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
              <parent ref="EID14be7570-c8c0-4595-bb63-d75731fe4549"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2923f354-7d70-4ef7-b0f8-ec6892375d8b">
                  <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
                  <parent ref="EID9b32bf8b-1735-45d1-a8f8-8fddc297dd55"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd' and text()='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='hierarchyLevelName' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'hierarchyLevelName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf925afb5-0630-4dfe-b14e-c57b4fc22d9f">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDc66095c4-c261-4669-a855-6c6b7df50d28">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EIDf925afb5-0630-4dfe-b14e-c57b4fc22d9f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDeb43496b-b832-4323-a4fe-681b3e22fe24">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EIDc66095c4-c261-4669-a855-6c6b7df50d28"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID83ca64ae-8bce-443f-8440-c41e0b006fac">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDc5fa699a-3aa1-4721-86be-f9b6a738a462">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EID83ca64ae-8bce-443f-8440-c41e0b006fac"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8a5d62c0-6cbf-4fbb-a18b-2c611c43f1d1">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EIDc5fa699a-3aa1-4721-86be-f9b6a738a462"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8b391f68-a1a3-49dd-826b-ec809e95572c">
          <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EIDdcfd714b-4c45-46a1-ad11-6d7191410613">
              <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
              <parent ref="EID8b391f68-a1a3-49dd-826b-ec809e95572c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdbbd6840-35a7-4220-ae37-c2a86973f7ee">
                  <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
                  <parent ref="EIDdcfd714b-4c45-46a1-ad11-6d7191410613"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='parentIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'parentIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDfaee9a69-923d-4d31-a56e-2e99f2ec08a5">
          <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID6636aaaa-be77-4a24-9131-8ca5c5a6bd35">
              <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
              <parent ref="EIDfaee9a69-923d-4d31-a56e-2e99f2ec08a5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID40ca0bce-27d7-49b0-8129-c90e1dc551a6">
                  <label>ISO-Element Nr. 7:  weitergehende Bezeichnung der Hierarchieebene</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: bei einem anderen Wert als "dataset" im Element hierarchyLevel ist das Element hierarchyLevelName zwingend zu belegen.]]></description>
                  <parent ref="EID6636aaaa-be77-4a24-9131-8ca5c5a6bd35"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd' and text()='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='hierarchyLevelName' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'hierarchyLevelName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5f2fe218-801a-4814-a1c4-6717c2481e0a">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID05f40666-39cd-474c-86a3-c28e4ee9e765">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EID5f2fe218-801a-4814-a1c4-6717c2481e0a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6208aee4-7233-4508-a1d4-14ffb5e4e367">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EID05f40666-39cd-474c-86a3-c28e4ee9e765"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb62ae3cc-a24a-47b7-9c70-10b3e61207db">
          <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID04e56292-2277-4ab0-83ad-d859f0bbef00">
              <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
              <parent ref="EIDb62ae3cc-a24a-47b7-9c70-10b3e61207db"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID72d1a994-7599-4ccd-b71b-6533fe10b066">
                  <label>ISO-Element Nr. 17: Vertriebsinformationen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "dataset" oder "series" im Element hierarchyLevel ist das Element distributionInfo zwingend zu belegen.]]></description>
                  <parent ref="EID04e56292-2277-4ab0-83ad-d859f0bbef00"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='distributionInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distributionInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7d4ba157-5fd1-4f65-8b70-7b144faa5320">
          <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
          <parent ref="EID688c1a3f-cd38-4359-88be-6e8e56a102d7"/>
          <testSteps>
            <TestStep id="EID7c1ff043-1150-4cd5-a317-aeaa0968d435">
              <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
              <parent ref="EID7d4ba157-5fd1-4f65-8b70-7b144faa5320"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2ab3f687-2ae7-4923-baee-55e2ab0e9e1e">
                  <label>ISO-Element Nr. 5: Identifikator des übergeordneten Metadatensatzes</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Metadata: beim Wert "tile" im Element hierarchyLevel ist das Element parentIdentifier zwingend zu belegen.]]></description>
                  <parent ref="EID7c1ff043-1150-4cd5-a317-aeaa0968d435"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='parentIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'parentIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDd65fd646-4fb5-4826-8ae9-9107864221a9">
      <label>EX_Extent</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID9e049d0d-332f-4192-9c3c-4084acccbc04">
          <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EIDf57c9769-8ebc-4116-a22b-2f1e402167a3">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EID9e049d0d-332f-4192-9c3c-4084acccbc04"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe3583a4e-e6c6-4aae-8adb-e535676ae212">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EIDf57c9769-8ebc-4116-a22b-2f1e402167a3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDce81c501-0342-40ec-b87d-959c89ed6b8d">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EIDfdc613bf-311b-45d2-8976-227ca85878eb">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EIDce81c501-0342-40ec-b87d-959c89ed6b8d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID12f98d54-2a32-4ee3-9d5f-33da639887b2">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDfdc613bf-311b-45d2-8976-227ca85878eb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9ef1888d-9888-4bc1-ba6d-0840bbfe05bf">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EIDff684eef-c36b-40bb-a857-2fb2ab17097c">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID9ef1888d-9888-4bc1-ba6d-0840bbfe05bf"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID521ec4d1-131a-4fc9-9321-aaf2c9922019">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDff684eef-c36b-40bb-a857-2fb2ab17097c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID28d2b4b4-1c99-4af1-b4e6-9d1227b22749">
          <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EID30d88e1f-89d9-4647-a2a2-0504f7985f1e">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EID28d2b4b4-1c99-4af1-b4e6-9d1227b22749"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3ab4dd41-4b1e-4928-a5d5-c41560787caa">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EID30d88e1f-89d9-4647-a2a2-0504f7985f1e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID58795932-d911-4d38-a08a-68dd85ee9f85">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EID403e4f00-ceaf-4adc-9ae5-071067063459">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID58795932-d911-4d38-a08a-68dd85ee9f85"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf34bf12e-d3c8-48af-afb0-5845b763d549">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID403e4f00-ceaf-4adc-9ae5-071067063459"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8aa791b7-50a8-410c-8bc8-5308aa7a7b74">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EIDf71ad0c8-599a-42d6-830c-87da3cc099ab">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID8aa791b7-50a8-410c-8bc8-5308aa7a7b74"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID891853bf-c406-4c69-9f71-ac9541192c17">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EIDf71ad0c8-599a-42d6-830c-87da3cc099ab"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDebc3bf9e-437d-4ffb-a4fd-f8c83cc385ad">
          <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EIDd63d49be-d170-4b87-aa4b-be245c396c0f">
              <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
              <parent ref="EIDebc3bf9e-437d-4ffb-a4fd-f8c83cc385ad"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDca089c9c-1a69-4b4f-a7f6-e6ef9ff94d4d">
                  <label>ISO-Element Nr. 336: Geografische Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: bei Aufruf über Element extent (ISO-Nr. 45) muss das Element geographicElement belegt sein.]]></description>
                  <parent ref="EIDd63d49be-d170-4b87-aa4b-be245c396c0f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0bc0d8c2-326b-4d6c-b4f5-5d8c06835b55">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EID2f8d7630-c387-4073-9a6b-490340b06333">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID0bc0d8c2-326b-4d6c-b4f5-5d8c06835b55"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID350513e2-375a-4d0f-9b42-96884a6c9d8b">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent: eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID2f8d7630-c387-4073-9a6b-490340b06333"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4a7eeac7-6e69-47c5-8ae8-a6c6a85323e1">
          <label>ISO-Element Nr. 334: Ausdehnung</label>
          <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
          <parent ref="EIDd65fd646-4fb5-4826-8ae9-9107864221a9"/>
          <testSteps>
            <TestStep id="EID4eea5bee-dfa7-40b8-a72c-54f6f0a7c549">
              <label>ISO-Element Nr. 334: Ausdehnung</label>
              <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
              <parent ref="EID4a7eeac7-6e69-47c5-8ae8-a6c6a85323e1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc70157c7-cff7-43e5-822d-f27f1034b851">
                  <label>ISO-Element Nr. 334: Ausdehnung</label>
                  <description><![CDATA[bedingtes Pflichtelement in EX_Extent (hier im Qualitätszweig): eines der Elemente description, geographicElement, temporalElement oder verticalElement muss belegt sein.]]></description>
                  <parent ref="EID4eea5bee-dfa7-40b8-a72c-54f6f0a7c549"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='geographicElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'geographicElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='temporalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'temporalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='EX_Extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='verticalElement' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'verticalElement', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID05e15663-21cc-4ccd-9357-a64f6c8d79dd">
      <label>CI_OnlineResource</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID062f14e1-f51a-4e07-a08d-c9982dbcae25">
          <label>ISO-Element Nr. 398: protocol</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID05e15663-21cc-4ccd-9357-a64f6c8d79dd"/>
          <testSteps>
            <TestStep id="EIDf82f49f1-dd37-4d2c-a994-119fc41ad4ff">
              <label>ISO-Element Nr. 398: protocol</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID062f14e1-f51a-4e07-a08d-c9982dbcae25"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID302f7e6b-b10f-4834-84d2-29407a3f2bfa">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'protocol' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf82f49f1-dd37-4d2c-a994-119fc41ad4ff"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='protocol' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4526c533-f22c-4fe0-955d-51a8c7c46be4">
          <label>ISO-Element Nr. 399: application­Profile</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID05e15663-21cc-4ccd-9357-a64f6c8d79dd"/>
          <testSteps>
            <TestStep id="EID4a8e3d18-78df-4b24-985e-dc112c6ce4c6">
              <label>ISO-Element Nr. 399: application­Profile</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4526c533-f22c-4fe0-955d-51a8c7c46be4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7f693fbc-55e8-4230-b768-f3b0556eb0c0">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'applicationProfile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID4a8e3d18-78df-4b24-985e-dc112c6ce4c6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='applicationProfile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8fdb025f-0d81-470d-9ab7-88338c19a60e">
          <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
          <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
          <parent ref="EID05e15663-21cc-4ccd-9357-a64f6c8d79dd"/>
          <testSteps>
            <TestStep id="EID3b143ed0-7845-41b0-b00a-174fda8b69e7">
              <label>ISO-Element Nr. 292: Bezeichnung des Vertriebsmediums</label>
              <description><![CDATA[Pflichtelement in Angaben zum Vertriebsmedium: die Bezeichnung muss vorhanden sein (mit eingeschränktem Werteumfang).]]></description>
              <parent ref="EID8fdb025f-0d81-470d-9ab7-88338c19a60e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5785fda8-c594-48d2-aa9d-d84d8e565197">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'name' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID3b143ed0-7845-41b0-b00a-174fda8b69e7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_OnlineResource' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='name' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_OnlineResource', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDb1c4fd7b-4a1f-433f-a6ae-50e78aecc74c">
      <label>DQ_QuantitativeResult</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID1c0a0e5e-1f54-493f-a3d7-69e33e1c10e5">
          <label>ISO-Element Nr. 134: value­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb1c4fd7b-4a1f-433f-a6ae-50e78aecc74c"/>
          <testSteps>
            <TestStep id="EID5415095d-061e-4f0e-a92f-b83f75566d5f">
              <label>ISO-Element Nr. 134: value­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1c0a0e5e-1f54-493f-a3d7-69e33e1c10e5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8f58b3a5-9dc1-4588-ae06-16f58a08f1dc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'valueType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID5415095d-061e-4f0e-a92f-b83f75566d5f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='DQ_QuantitativeResult' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='valueType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'DQ_QuantitativeResult', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDa9bc2b9c-7e82-4c04-963f-a99045820789">
      <label>LI_Source</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID78ab4818-7f60-492b-b657-2f13f6d95b12">
          <label>ISO-Element Nr. 93: Beschreibung Quelldaten</label>
          <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
          <parent ref="EIDa9bc2b9c-7e82-4c04-963f-a99045820789"/>
          <testSteps>
            <TestStep id="EID7954b307-4c8a-4101-90b2-c017006cfb50">
              <label>ISO-Element Nr. 93: Beschreibung Quelldaten</label>
              <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
              <parent ref="EID78ab4818-7f60-492b-b657-2f13f6d95b12"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd4d01faf-1197-4323-8283-0d4627a106f5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'description' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID7954b307-4c8a-4101-90b2-c017006cfb50"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd6b36874-4c26-48e8-8b03-7fecd5987d29">
          <label>ISO-Element Nr. 93: Beschreibung Quelldaten</label>
          <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
          <parent ref="EIDa9bc2b9c-7e82-4c04-963f-a99045820789"/>
          <testSteps>
            <TestStep id="EID6063af80-85cf-490b-9cd0-e919bbe6a6ba">
              <label>ISO-Element Nr. 93: Beschreibung Quelldaten</label>
              <description><![CDATA[Pflichtelement in Angaben zu verwendeten Quelldaten: die Beschreibung muss vorhanden sein.]]></description>
              <parent ref="EIDd6b36874-4c26-48e8-8b03-7fecd5987d29"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDecf8cbaf-f539-4450-a20f-6bf00852e0af">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'description' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID6063af80-85cf-490b-9cd0-e919bbe6a6ba"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='description' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'description', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDcb454dc6-c0d1-41b5-a84a-df5229f54dde">
          <label>ISO-Element Nr. 97: source­Extent</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa9bc2b9c-7e82-4c04-963f-a99045820789"/>
          <testSteps>
            <TestStep id="EIDcbc6c6c5-1920-4789-a7ad-e0ca61251072">
              <label>ISO-Element Nr. 97: source­Extent</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDcb454dc6-c0d1-41b5-a84a-df5229f54dde"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID39271827-0f56-4db8-98d7-3d70d7b39739">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'sourceExtent' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDcbc6c6c5-1920-4789-a7ad-e0ca61251072"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='sourceExtent' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8d8b2bf2-a07f-442a-90df-036c2517c348">
          <label>ISO-Element Nr. 98: source­Step</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDa9bc2b9c-7e82-4c04-963f-a99045820789"/>
          <testSteps>
            <TestStep id="EIDee370f37-8b2f-4e0f-af2d-57ec9b05111f">
              <label>ISO-Element Nr. 98: source­Step</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID8d8b2bf2-a07f-442a-90df-036c2517c348"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd3f40771-20a4-4ae7-9961-d7c868e3201c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'sourceStep' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDee370f37-8b2f-4e0f-af2d-57ec9b05111f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_Source' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='sourceStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_Source', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDc33faa48-b281-4917-b0d1-59de63d2ab79">
      <label>MD_DataIdentification</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDc40a4424-2188-4712-b292-334ce2ffa112">
          <label>ISO-Element Nr. 27: credit</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDe289a6a7-8e78-4f50-997d-b5f7a37723bd">
              <label>ISO-Element Nr. 27: credit</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDc40a4424-2188-4712-b292-334ce2ffa112"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID64275f18-3d88-4bd1-8342-f2d4fca16014">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'credit' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDe289a6a7-8e78-4f50-997d-b5f7a37723bd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='credit' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc9e626a4-22ac-4138-84d8-bba91b9ad3e3">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDb5839783-1459-42bc-9dce-033f554677d4">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EIDc9e626a4-22ac-4138-84d8-bba91b9ad3e3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf40c7d09-30ff-4428-9863-c5e5f276895f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDb5839783-1459-42bc-9dce-033f554677d4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID452833ab-463c-4196-b91f-3696b1a8b8b0">
          <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID2231be74-85ea-4787-ae36-070709eb367e">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EID452833ab-463c-4196-b91f-3696b1a8b8b0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa4fa3636-df1e-48ca-a588-f3d8f5383403">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID2231be74-85ea-4787-ae36-070709eb367e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'pointOfContact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID07d74e03-d5b6-4888-9699-982a499cdf9e">
          <label>ISO-Element Nr. 32: resource­Format</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDfe23a73d-a41b-4231-86bb-49ca1dde788f">
              <label>ISO-Element Nr. 32: resource­Format</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID07d74e03-d5b6-4888-9699-982a499cdf9e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2cfb80f1-f8a9-42e2-9fe8-3527045c1d0e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDfe23a73d-a41b-4231-86bb-49ca1dde788f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3516bc54-0bf4-43d7-a45b-8303e5f2a98b">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID6cd25c73-4bd1-4ea3-9e89-83fa6ed0de74">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID3516bc54-0bf4-43d7-a45b-8303e5f2a98b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID305bab9d-efbe-4cdb-b18b-34edd4724903">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID6cd25c73-4bd1-4ea3-9e89-83fa6ed0de74"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9e7e1cd1-29ed-436d-a8ca-dc4b5d3953f3">
          <label>ISO-Element Nr. 33: Schlüsselwort</label>
          <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID20d7f83f-a279-4f7c-9eb3-6e6f76cbc672">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID9e7e1cd1-29ed-436d-a8ca-dc4b5d3953f3"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1e383037-3b7b-42c6-8183-8d7b98e3801e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID20d7f83f-a279-4f7c-9eb3-6e6f76cbc672"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'descriptiveKeywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf51631da-32bd-4e3f-8ed7-a1e1f88eabf8">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDd8e368c3-ff7c-4ad9-b2ac-debe2ea6829a">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EIDf51631da-32bd-4e3f-8ed7-a1e1f88eabf8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID62894bc3-a963-40bd-8f3d-568206a1b935">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDd8e368c3-ff7c-4ad9-b2ac-debe2ea6829a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID366934ab-dc51-4c62-b241-41dc4f8f60a7">
          <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
          <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID8341eb43-8a61-4153-be4e-1e6ee1071894">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID366934ab-dc51-4c62-b241-41dc4f8f60a7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf627fe02-37ac-4cd6-8f9d-ffebbd1a1a55">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID8341eb43-8a61-4153-be4e-1e6ee1071894"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'resourceConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID99aed110-3d3d-467e-94ba-c65cc0d23fc6">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDd8f45c1f-107c-4dac-8a46-b32d77de6c11">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EID99aed110-3d3d-467e-94ba-c65cc0d23fc6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfbec6bf5-91f1-4d1e-9b00-8aeefd9df7f2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>tin</li><li>stereoModel</li><li>video</li><li>vector</li><li>textTable</li><li>grid</li></ul>]]></description>
                  <parent ref="EIDd8f45c1f-107c-4dac-8a46-b32d77de6c11"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('tin', 'stereoModel', 'video', 'vector', 'textTable', 'grid')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'spatialRepresentationType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID974b1fe4-50e5-437c-a9d1-3dcef7aba622">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDa5cc6c48-698e-4b35-bb5a-1bca323cc439">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EID974b1fe4-50e5-437c-a9d1-3dcef7aba622"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc6a993bf-8e00-4656-ba31-32aa831efcba">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDa5cc6c48-698e-4b35-bb5a-1bca323cc439"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa3d9a300-e8ac-4b2c-b5ed-e1923f836cab">
          <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
          <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDe71ec636-3cc2-40c8-a28a-86c0804e257b">
              <label>ISO-Element Nr. 37: räumliche Darstellungsart</label>
              <description><![CDATA[Pflichtelement: die räumliche Darstellungsart muss vorhanden sein.]]></description>
              <parent ref="EIDa3d9a300-e8ac-4b2c-b5ed-e1923f836cab"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf2113acd-ff51-4332-9e10-69316fb63d21">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'spatialRepresentationType' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDe71ec636-3cc2-40c8-a28a-86c0804e257b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialRepresentationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'spatialRepresentationType', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7bbf5bd6-f7f9-45ec-8bf2-23c879c189de">
          <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
          <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDc389e8a8-293b-447d-ab8c-ebbe7324a608">
              <label>ISO-Element Nr. 3: Sprache der Metadaten</label>
              <description><![CDATA[Pflichtelement: die Sprache der Metadaten muss angegeben sein.]]></description>
              <parent ref="EID7bbf5bd6-f7f9-45ec-8bf2-23c879c189de"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdb90a134-3e6d-4816-8095-898dee9d4d5d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'language' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDc389e8a8-293b-447d-ab8c-ebbe7324a608"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='language' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd33170e6-b638-4aa5-ac19-38e8a75e5a0a">
          <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
          <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDb9456ace-ca57-437a-86d5-b51376b4f2e5">
              <label>ISO-Element Nr. 4: Zeichensatz in den Metadaten</label>
              <description><![CDATA[Pflichtelement: der in den Metadaten verwendete Zeichensatz muss angegeben sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt: nur "utf8" und "8859part1" sind zugelassen.]]></description>
              <parent ref="EIDd33170e6-b638-4aa5-ac19-38e8a75e5a0a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID664b79c5-414a-4ede-804b-231920d74d19">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'characterSet' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>8859part1</li><li>utf8</li></ul>]]></description>
                  <parent ref="EIDb9456ace-ca57-437a-86d5-b51376b4f2e5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('8859part1', 'utf8')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='characterSet' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'characterSet', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe2946716-ff4a-43c1-97b4-646b69cb834c">
          <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
          <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDa1f1e723-3b04-4a9a-8dde-d98c4add35ac">
              <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
              <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
              <parent ref="EIDe2946716-ff4a-43c1-97b4-646b69cb834c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfc22a8cd-0d2e-4962-b554-38750dbe47e1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'topicCategory' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>biota</li><li>climatologyMeteorologyAtmosphere</li><li>economy</li><li>health</li><li>farming</li><li>location</li><li>inlandWaters</li><li>environment</li><li>society</li><li>transportation</li><li>utilitiesCommunication</li><li>elevation</li><li>intelligenceMilitary</li><li>geoscientificInformation</li><li>structure</li><li>oceans</li><li>imageryBaseMapsEarthCover</li><li>boundaries</li><li>planningCadastre</li></ul>]]></description>
                  <parent ref="EIDa1f1e723-3b04-4a9a-8dde-d98c4add35ac"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('biota', 'climatologyMeteorologyAtmosphere', 'economy', 'health', 'farming', 'location', 'inlandWaters', 'environment', 'society', 'transportation', 'utilitiesCommunication', 'elevation', 'intelligenceMilitary', 'geoscientificInformation', 'structure', 'oceans', 'imageryBaseMapsEarthCover', 'boundaries', 'planningCadastre')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='topicCategory' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'topicCategory', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa6f83d62-f345-4fc8-9f9e-7e577e94205d">
          <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
          <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID9998d273-fb38-4e80-a3c1-6ab76654a33c">
              <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
              <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
              <parent ref="EIDa6f83d62-f345-4fc8-9f9e-7e577e94205d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDf4c6d5c2-84ee-400e-b3f8-b193a18d90a2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'topicCategory' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID9998d273-fb38-4e80-a3c1-6ab76654a33c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='topicCategory' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDeb890ccc-c9b7-4ff8-a33e-965191fa9161">
          <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
          <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDa67016a7-70f8-4e86-ba26-93f0147e7ed2">
              <label>ISO-Element Nr. 41: ISO-Themenkategorie</label>
              <description><![CDATA[Pflichtelement: die ISO-Themenkategorie muss vorhanden sein.]]></description>
              <parent ref="EIDeb890ccc-c9b7-4ff8-a33e-965191fa9161"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9606a8a1-8800-46d5-8b2b-3c96ea7fa91b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'topicCategory' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDa67016a7-70f8-4e86-ba26-93f0147e7ed2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='topicCategory' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'topicCategory', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8281775d-5c22-4940-9a2a-6909655cbb1d">
          <label>ISO-Element Nr. 45: Ausdehnung der Ressource</label>
          <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EID085a38d1-0387-48a9-a215-fb650c7a6cf1">
              <label>ISO-Element Nr. 45: Ausdehnung der Ressource</label>
              <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
              <parent ref="EID8281775d-5c22-4940-9a2a-6909655cbb1d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDda3c258b-8318-4c44-96d1-f550ffda5061">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extent' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EID085a38d1-0387-48a9-a215-fb650c7a6cf1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7003d96d-8e5b-4f26-8b01-99a882852360">
          <label>ISO-Element Nr. 45: Ausdehnung der Ressource</label>
          <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
          <parent ref="EIDc33faa48-b281-4917-b0d1-59de63d2ab79"/>
          <testSteps>
            <TestStep id="EIDfaf4b0f7-c6ed-4ca4-bbb9-365370de8ace">
              <label>ISO-Element Nr. 45: Ausdehnung der Ressource</label>
              <description><![CDATA[Pflichtelement: die Ausdehnung der Ressource muss benannt sein.]]></description>
              <parent ref="EID7003d96d-8e5b-4f26-8b01-99a882852360"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID76698894-223b-4354-8615-fdc602590462">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extent' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDfaf4b0f7-c6ed-4ca4-bbb9-365370de8ace"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extent' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extent', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID0400eaae-e613-4f6c-89ce-2853b969ffe3">
      <label>MD_Distribution</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDe8486437-c22b-4bac-9167-12ffd2091809">
          <label>ISO-Element Nr. 271: Formatangabe</label>
          <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
          <parent ref="EID0400eaae-e613-4f6c-89ce-2853b969ffe3"/>
          <testSteps>
            <TestStep id="EIDfcf3a064-293f-4e2f-83d6-a917c509ea32">
              <label>ISO-Element Nr. 271: Formatangabe</label>
              <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
              <parent ref="EIDe8486437-c22b-4bac-9167-12ffd2091809"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc16320ec-ee99-4cc6-b509-edea4b29534b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributionFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDfcf3a064-293f-4e2f-83d6-a917c509ea32"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distribution' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributionFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distribution', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc9f66967-a102-4835-ad45-ce37a808d6c4">
          <label>ISO-Element Nr. 271: Formatangabe</label>
          <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
          <parent ref="EID0400eaae-e613-4f6c-89ce-2853b969ffe3"/>
          <testSteps>
            <TestStep id="EID64754e5e-635f-4078-ad62-7523c1516f53">
              <label>ISO-Element Nr. 271: Formatangabe</label>
              <description><![CDATA[Pflichtelement in Vertriebs- bzw. Bezugsinformationen: die Angabe zum Format muss vorhanden sein.]]></description>
              <parent ref="EIDc9f66967-a102-4835-ad45-ce37a808d6c4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5616ae77-3c61-4d59-9ceb-8bc3b6ef3bf1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributionFormat' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID64754e5e-635f-4078-ad62-7523c1516f53"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_Distribution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='distributionFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'distributionFormat', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID7dc2f572-df37-4c01-b27f-3d789b3679c1">
      <label>DQ_DataQuality</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDe3fec96b-11cd-4c9f-b5bf-94819620c492">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDd2d3e5a7-309e-4dc8-b831-bf3758b46823">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDe3fec96b-11cd-4c9f-b5bf-94819620c492"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDac77fd20-5fa3-441f-9118-1b789eb11d57">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDd2d3e5a7-309e-4dc8-b831-bf3758b46823"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3ea6e5a7-a18d-4ff2-9ee4-a0cf151a5691">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDdbfcb6ec-95c9-41f4-aef0-a3e9a1d72e1d">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID3ea6e5a7-a18d-4ff2-9ee4-a0cf151a5691"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc69b263e-cf92-4e34-ad4e-ca56a635ba8f">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDdbfcb6ec-95c9-41f4-aef0-a3e9a1d72e1d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5286cb52-3fcc-4a0e-81d5-c92107bf5b9e">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID3bcfa716-7c7a-4547-884f-fca93db00bd5">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID5286cb52-3fcc-4a0e-81d5-c92107bf5b9e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID114aa7c1-085d-43c0-a22a-b14915f83d20">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID3bcfa716-7c7a-4547-884f-fca93db00bd5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDdfa7e737-cdac-4c72-bea1-fd0c2f931791">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID7d6d1403-432a-40fb-9cc9-a986e1ca48b4">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDdfa7e737-cdac-4c72-bea1-fd0c2f931791"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd9733ccc-0f49-4e50-b5aa-5c7c9fff619c">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID7d6d1403-432a-40fb-9cc9-a986e1ca48b4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa61ab15d-934e-4a3e-b4d3-4f1f89c765d8">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDe3b8cf5e-5148-4982-945c-d24dfe8df296">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDa61ab15d-934e-4a3e-b4d3-4f1f89c765d8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID09e9fedb-4a6d-49c7-a2cf-5e9ba49bad2f">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDe3b8cf5e-5148-4982-945c-d24dfe8df296"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3c434e65-cccc-4089-ba9a-f0fceb875274">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID67a81f68-0c36-4d6d-9fd6-52c64ee1d1b5">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID3c434e65-cccc-4089-ba9a-f0fceb875274"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID79e2aabb-5513-4a71-b86a-af90bf088268">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID67a81f68-0c36-4d6d-9fd6-52c64ee1d1b5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3fd3ac3c-de30-4497-9548-d5db336b461e">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDb16817b2-78b8-417d-a537-5633e7949337">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID3fd3ac3c-de30-4497-9548-d5db336b461e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID376c67dc-5c30-4cf7-b0d3-a784921d8bb8">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDb16817b2-78b8-417d-a537-5633e7949337"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8f30c519-6552-44a3-a83d-b41ef98b9fcd">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID2a00e194-5a33-4391-8674-96a0ace8084f">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID8f30c519-6552-44a3-a83d-b41ef98b9fcd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa7445087-0417-4351-9e13-3a4bf3318643">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID2a00e194-5a33-4391-8674-96a0ace8084f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd254e099-8a2b-4ef7-ad86-f6e14a707c49">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDc44f205c-b911-430c-b911-f8ef3d9b2e46">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDd254e099-8a2b-4ef7-ad86-f6e14a707c49"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID82afb26e-6aad-4903-9270-091acf24f699">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDc44f205c-b911-430c-b911-f8ef3d9b2e46"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDfa6cca03-93df-4c11-b86c-838c6753eb58">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDb8398f2e-b678-445c-b76e-9ef4f21de42c">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDfa6cca03-93df-4c11-b86c-838c6753eb58"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb9925ade-cf5e-48d6-8046-f364c1114349">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDb8398f2e-b678-445c-b76e-9ef4f21de42c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb0038187-a552-4675-a1c3-743503997f19">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDa2d40aa3-55a8-4393-8975-6febd7fad944">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDb0038187-a552-4675-a1c3-743503997f19"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4bbafb45-cfa9-482e-9d02-a07ad3ba62bb">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDa2d40aa3-55a8-4393-8975-6febd7fad944"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8b6909fe-0a70-4cee-9f66-1359a8ff22a0">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID5b956dac-7903-4e93-8604-55fa8b32f9f6">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID8b6909fe-0a70-4cee-9f66-1359a8ff22a0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1101d067-0de4-4c73-bb14-c038e7d1c2f9">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID5b956dac-7903-4e93-8604-55fa8b32f9f6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2d520289-8fa2-4092-96a5-6fa672c70547">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID9f44a203-0378-44ed-a410-a1cdfd6f26c3">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID2d520289-8fa2-4092-96a5-6fa672c70547"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe295b3df-8246-457e-9139-835064873d07">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID9f44a203-0378-44ed-a410-a1cdfd6f26c3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='dataset'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8a3c4a12-7bed-457b-a654-25a083cd57d7">
          <label>ISO-Element Nr. 81: Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EIDcd2e9091-ed68-47e4-bc51-0cc7f20d2fb4">
              <label>ISO-Element Nr. 81: Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EID8a3c4a12-7bed-457b-a654-25a083cd57d7"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6df6ff79-a2bf-4678-ac6d-66fce81728ce">
                  <label>ISO-Element Nr. 81: Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "dataset" oder „series“ im Element hierarchyLevel ist das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EIDcd2e9091-ed68-47e4-bc51-0cc7f20d2fb4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='series'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc3baa27d-2220-4bce-a381-1b84b391c2e2">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID1c25f38c-af2b-425f-835b-c50fa677baba">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDc3baa27d-2220-4bce-a381-1b84b391c2e2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7bb6e527-0ea8-4746-b28b-608cbe410bd6">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID1c25f38c-af2b-425f-835b-c50fa677baba"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='tile'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDdac8522f-146d-457c-ab1f-f79cd0afd3e6">
          <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
          <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
          <parent ref="EID7dc2f572-df37-4c01-b27f-3d789b3679c1"/>
          <testSteps>
            <TestStep id="EID63f6561a-fc8f-49a4-b4a0-b108013b386d">
              <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
              <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
              <parent ref="EIDdac8522f-146d-457c-ab1f-f79cd0afd3e6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0379ef3f-af90-4465-86e8-17122ddc6ed5">
                  <label>ISO-Elemente Nr. 80 und 81: Qualitätsbericht bzw. Herkunft</label>
                  <description><![CDATA[bedingtes Pflichtelement in DQ_DataQuality: beim Wert "tile" oder „featureType“ im Element hierarchyLevel ist entweder das Element report oder das Element lineage zwingend zu belegen.]]></description>
                  <parent ref="EID63f6561a-fc8f-49a4-b4a0-b108013b386d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='report' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'report', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='hierarchyLevel' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='featureType'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='lineage' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'lineage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDb5b6354d-1125-4ac8-80f1-b36962f59859">
      <label>EX_GeographicDescription</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID5c5871bf-d84b-49bd-9a68-e1a5f6ad5ca4">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EIDb5b6354d-1125-4ac8-80f1-b36962f59859"/>
          <testSteps>
            <TestStep id="EID4c30d23d-8270-4a5e-85d8-ae4f273de303">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID5c5871bf-d84b-49bd-9a68-e1a5f6ad5ca4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9cce0660-9ff9-479d-b6b8-8cf59c429630">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID4c30d23d-8270-4a5e-85d8-ae4f273de303"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='EX_GeographicDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'EX_GeographicDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0f6be5bb-98ed-4eb4-8f5b-f3a1cbb779db">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EIDb5b6354d-1125-4ac8-80f1-b36962f59859"/>
          <testSteps>
            <TestStep id="EID1908aa65-3f0c-4eea-b177-5b4ffcb48686">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID0f6be5bb-98ed-4eb4-8f5b-f3a1cbb779db"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDad8c19e1-9807-48ff-b478-2537a6a0166e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID1908aa65-3f0c-4eea-b177-5b4ffcb48686"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='EX_GeographicDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID4d20af62-6678-4a28-a8f7-6f886d12e64b">
      <label>CI_Contact</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID319c2d9a-c76f-496e-bb35-8247dcede61c">
          <label>ISO-Element Nr. 391: hours­Of­Service</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EID64d63113-d935-472e-82be-0026a127223b">
              <label>ISO-Element Nr. 391: hours­Of­Service</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID319c2d9a-c76f-496e-bb35-8247dcede61c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbb4f13dc-7b3d-4a98-8cca-c3363e1300f7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'hoursOfService' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID64d63113-d935-472e-82be-0026a127223b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='hoursOfService' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID589b9e9f-bbd6-4401-b8bd-b247ae3384f4">
          <label>ISO-Element Nr. 392: contact­Instructions</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EID45a47e00-18a1-46ee-b1bb-7dcf5cd501bc">
              <label>ISO-Element Nr. 392: contact­Instructions</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID589b9e9f-bbd6-4401-b8bd-b247ae3384f4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9bd0a7f1-ef73-47fb-b70e-8c8420cd6d2f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contactInstructions' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID45a47e00-18a1-46ee-b1bb-7dcf5cd501bc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='contactInstructions' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID91cd066a-e054-48a6-ae96-85fb2adfeb13">
          <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EIDdaa43f87-e1c6-4a92-bd65-32b63daef761">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
              <parent ref="EID91cd066a-e054-48a6-ae96-85fb2adfeb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa2ce43ba-a5f1-4aa0-8d9c-8b13ce264d69">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDdaa43f87-e1c6-4a92-bd65-32b63daef761"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf898ee50-8001-4ef9-8746-02f2f61a73a0">
          <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EID5634301e-7b9b-4832-ab14-abfe3a4e39e1">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EIDf898ee50-8001-4ef9-8746-02f2f61a73a0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID8751d93d-036a-4dec-95ab-7c26ae41cdef">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EID5634301e-7b9b-4832-ab14-abfe3a4e39e1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd676579a-7000-409f-92e2-72579aa1da7f">
          <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EIDb96c8360-849a-4d05-a8a9-58d8d76ccc42">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
              <parent ref="EIDd676579a-7000-409f-92e2-72579aa1da7f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe558756f-470b-4f58-802a-e55579adc369">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDb96c8360-849a-4d05-a8a9-58d8d76ccc42"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDdf34a7bb-cef2-4d21-a76c-28769c8b38b6">
          <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
          <parent ref="EID4d20af62-6678-4a28-a8f7-6f886d12e64b"/>
          <testSteps>
            <TestStep id="EIDc05c0df4-a5fe-464e-a6e8-82e816daaf73">
              <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
              <parent ref="EIDdf34a7bb-cef2-4d21-a76c-28769c8b38b6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID244a9457-9095-4223-99a4-d9e8145b5fe1">
                  <label>ISO-Element Nr. 389: Adresse der verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_Contact: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element address belegt sein.]]></description>
                  <parent ref="EIDc05c0df4-a5fe-464e-a6e8-82e816daaf73"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDc06e77c4-72b1-418d-b1f3-d2fbb49bd4fd">
      <label>MD_Resolution</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDaad90d97-9267-4c13-8513-03e5eed5b8e4">
          <label>ISO-Element Nr. 59: Auflösung</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_Resolution: eines der Elemente equivalentScale oder distance muss belegt sein.]]></description>
          <parent ref="EIDc06e77c4-72b1-418d-b1f3-d2fbb49bd4fd"/>
          <testSteps>
            <TestStep id="EID85a38213-a21b-4a99-aa19-135863c0e461">
              <label>ISO-Element Nr. 59: Auflösung</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_Resolution: eines der Elemente equivalentScale oder distance muss belegt sein.]]></description>
              <parent ref="EIDaad90d97-9267-4c13-8513-03e5eed5b8e4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb0e49dfe-c229-4058-a129-f795c1d5639f">
                  <label>ISO-Element Nr. 59: Auflösung</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_Resolution: eines der Elemente equivalentScale oder distance muss belegt sein.]]></description>
                  <parent ref="EID85a38213-a21b-4a99-aa19-135863c0e461"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_Resolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='equivalentScale' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'equivalentScale', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='spatialResolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_Resolution' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='distance' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'distance', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDb50cd4d1-610d-4819-82fd-a4cf24541a48">
      <label>MD_ApplicationSchemaInformation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID6bcf06af-a01b-45f4-9708-db02c280fd54">
          <label>ISO-Element Nr. 324: schema­Ascii</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb50cd4d1-610d-4819-82fd-a4cf24541a48"/>
          <testSteps>
            <TestStep id="EID57a9dba1-52ec-41bc-b56a-9fa135cd34ad">
              <label>ISO-Element Nr. 324: schema­Ascii</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6bcf06af-a01b-45f4-9708-db02c280fd54"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9fc74be5-add8-4145-b65c-f3a9b748da35">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'schemaAscii' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID57a9dba1-52ec-41bc-b56a-9fa135cd34ad"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='schemaAscii' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID84784e3f-1821-4b9a-89ff-d2014a40dcb5">
          <label>ISO-Element Nr. 325: graphics­File</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb50cd4d1-610d-4819-82fd-a4cf24541a48"/>
          <testSteps>
            <TestStep id="EIDf5039bef-6b32-43cd-8487-bad75b838d52">
              <label>ISO-Element Nr. 325: graphics­File</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID84784e3f-1821-4b9a-89ff-d2014a40dcb5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9773c608-9259-4653-ac69-771fa795046a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'graphicsFile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf5039bef-6b32-43cd-8487-bad75b838d52"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='graphicsFile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID92071d21-f260-40f4-b3fd-d8f6e17ba7ac">
          <label>ISO-Element Nr. 326: software­Development­File</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb50cd4d1-610d-4819-82fd-a4cf24541a48"/>
          <testSteps>
            <TestStep id="EID7b81deae-60d4-4319-b678-53d2c8939c8d">
              <label>ISO-Element Nr. 326: software­Development­File</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID92071d21-f260-40f4-b3fd-d8f6e17ba7ac"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID588110db-b476-4b4b-bc42-28ced28413dc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'softwareDevelopmentFile' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID7b81deae-60d4-4319-b678-53d2c8939c8d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='softwareDevelopmentFile' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe4fe5d27-c6d7-4518-ada9-654ec9739861">
          <label>ISO-Element Nr. 327: software­Development­File­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDb50cd4d1-610d-4819-82fd-a4cf24541a48"/>
          <testSteps>
            <TestStep id="EIDdaac0eb8-ffd5-4441-bcbc-23c3cecfec09">
              <label>ISO-Element Nr. 327: software­Development­File­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDe4fe5d27-c6d7-4518-ada9-654ec9739861"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdf4ccaaf-206a-4569-a936-e199dd413fbf">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'softwareDevelopmentFileFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdaac0eb8-ffd5-4441-bcbc-23c3cecfec09"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ApplicationSchemaInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='softwareDevelopmentFileFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ApplicationSchemaInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDea34ac83-9320-4c00-b9e2-0f65463311f9">
      <label>MD_Identifier</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID50138d3a-6a1d-4389-8071-8aa5c0982051">
          <label>ISO-Element Nr. 206: authority</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDea34ac83-9320-4c00-b9e2-0f65463311f9"/>
          <testSteps>
            <TestStep id="EID566c4d4c-b927-4ece-85c3-aee44d052db9">
              <label>ISO-Element Nr. 206: authority</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID50138d3a-6a1d-4389-8071-8aa5c0982051"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID146493bd-c218-4b6e-8d6a-d05097fb1af5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'authority' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID566c4d4c-b927-4ece-85c3-aee44d052db9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='authority' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDbbf74987-86fb-4ef5-ba4c-22d3440d28c8">
      <label>MD_Format</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDb4ae8aea-978e-4c34-8ffa-6a9fd3046fef">
          <label>ISO-Element Nr. 287: amendment­Number</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDbbf74987-86fb-4ef5-ba4c-22d3440d28c8"/>
          <testSteps>
            <TestStep id="EID0a3f4316-49ba-4d0b-9ced-d8b656013563">
              <label>ISO-Element Nr. 287: amendment­Number</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDb4ae8aea-978e-4c34-8ffa-6a9fd3046fef"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID863ee830-fdad-4139-90d2-1821d30e0330">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'amendmentNumber' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID0a3f4316-49ba-4d0b-9ced-d8b656013563"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Format' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='amendmentNumber' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Format', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbac075a7-7947-4833-a4ef-dce7d546970f">
          <label>ISO-Element Nr. 290: format­Distributor</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDbbf74987-86fb-4ef5-ba4c-22d3440d28c8"/>
          <testSteps>
            <TestStep id="EIDb3273e39-acd2-455b-9a58-f32503725fa8">
              <label>ISO-Element Nr. 290: format­Distributor</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDbac075a7-7947-4833-a4ef-dce7d546970f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbf6dc3a7-fb14-49a2-9902-58013980e44a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'formatDistributor' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDb3273e39-acd2-455b-9a58-f32503725fa8"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Format' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='formatDistributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Format', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID0ee2a3e5-e1fa-4cfa-8b36-fd8bcb3113cf">
      <label>LI_ProcessStep</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID6a9d3e58-9894-4e23-9039-ae1d52f7cac4">
          <label>ISO-Element Nr. 88: rationale</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID0ee2a3e5-e1fa-4cfa-8b36-fd8bcb3113cf"/>
          <testSteps>
            <TestStep id="EID110cd51e-246f-425c-b64a-25932270aaa9">
              <label>ISO-Element Nr. 88: rationale</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6a9d3e58-9894-4e23-9039-ae1d52f7cac4"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID59c99e49-bf4e-4979-9e07-67b1f5cde647">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'rationale' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID110cd51e-246f-425c-b64a-25932270aaa9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='rationale' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID68be270c-d6bf-49b4-bc1d-d084ba505c5d">
          <label>ISO-Element Nr. 90: processor</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID0ee2a3e5-e1fa-4cfa-8b36-fd8bcb3113cf"/>
          <testSteps>
            <TestStep id="EID0093ec4b-8d30-4224-b79c-ce9b4bca90cd">
              <label>ISO-Element Nr. 90: processor</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID68be270c-d6bf-49b4-bc1d-d084ba505c5d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID287e36e0-9fd5-4474-8c61-3be329993499">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'processor' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID0093ec4b-8d30-4224-b79c-ce9b4bca90cd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='processor' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6e72cdd4-b6fa-4fc5-9d0b-182eec0851a6">
          <label>ISO-Element Nr. 91: source</label>
          <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID0ee2a3e5-e1fa-4cfa-8b36-fd8bcb3113cf"/>
          <testSteps>
            <TestStep id="EIDa0a62412-8859-4ba8-b599-a650376259a3">
              <label>ISO-Element Nr. 91: source</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6e72cdd4-b6fa-4fc5-9d0b-182eec0851a6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6585acfd-4850-4f17-9a52-c42c6f8b356d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'source' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDa0a62412-8859-4ba8-b599-a650376259a3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='LI_ProcessStep' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='source' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'LI_ProcessStep', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID663c88b7-723b-4755-8b33-91a73a87a1c9">
      <label>MD_LegalConstraints</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDaec2fb9e-7734-43fe-ad9f-d4e36ce84656">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID75a3008c-dbf1-4f21-9608-104852362280">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EIDaec2fb9e-7734-43fe-ad9f-d4e36ce84656"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID256897c1-7770-4403-8c0b-0e3cd45aba37">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID75a3008c-dbf1-4f21-9608-104852362280"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9a1557c3-eeb9-473e-b5d4-e90ac6cf4b7d">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID197c879d-52a7-4258-a8d0-50ecb4442c80">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID9a1557c3-eeb9-473e-b5d4-e90ac6cf4b7d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfb6ab218-5f52-4661-ad61-820d5a2e1a23">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID197c879d-52a7-4258-a8d0-50ecb4442c80"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID0b9593a3-5c23-455e-b046-5a2f59a4ff48">
          <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
          <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID62594299-9ccd-4281-8a48-797c0f813008">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID0b9593a3-5c23-455e-b046-5a2f59a4ff48"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1e6cfe02-7f06-4eb2-9863-14bc212a1813">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EID62594299-9ccd-4281-8a48-797c0f813008"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID8ff770ea-fdb7-4afb-825d-807af27b5a45">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID51aa520d-51cf-487f-9827-b45030dde9ae">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID8ff770ea-fdb7-4afb-825d-807af27b5a45"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID27934b00-3e35-41b9-bff3-cccdfc9294e7">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID51aa520d-51cf-487f-9827-b45030dde9ae"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDeed6a2d9-3c10-484e-b6d3-1e5e473a3877">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EIDc8cd391c-96e8-4ee5-8ec1-9d51be8bb168">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EIDeed6a2d9-3c10-484e-b6d3-1e5e473a3877"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa941f186-8073-4797-bffe-9c059cdcf201">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EIDc8cd391c-96e8-4ee5-8ec1-9d51be8bb168"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID02b3f524-52a5-47da-9daa-844768150a3f">
          <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
          <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID422abcbc-63ee-43a5-bb00-a1fd6d5a30fc">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID02b3f524-52a5-47da-9daa-844768150a3f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7631e745-5934-46a2-bc54-5dcb0df05dc8">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EID422abcbc-63ee-43a5-bb00-a1fd6d5a30fc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID837880cd-8279-4379-a735-0adc8ff88d3d">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EIDb742f267-92e5-4865-a075-6048a40bbecf">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID837880cd-8279-4379-a735-0adc8ff88d3d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID95801725-272d-4eb2-abae-b19a0f7c38f7">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element accessConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EIDb742f267-92e5-4865-a075-6048a40bbecf"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID40452583-2009-4114-a337-6a1812245bbc">
          <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID989ff7b6-1096-44a4-b292-ada8e69bb72c">
              <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
              <parent ref="EID40452583-2009-4114-a337-6a1812245bbc"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID281c6937-608a-453e-b733-cbaf33a09d34">
                  <label>ISO-Element Nr. 72: Andere Beschränkungen</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_LegalConstraints: bei einem Wert "otherRestrictions" im Element useConstraints muss das Element otherConstraints belegt sein.]]></description>
                  <parent ref="EID989ff7b6-1096-44a4-b292-ada8e69bb72c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'otherConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID5a6371bc-3274-4230-af10-62c3fa2fca6c">
          <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
          <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
          <parent ref="EID663c88b7-723b-4755-8b33-91a73a87a1c9"/>
          <testSteps>
            <TestStep id="EID556d6327-cfec-4685-b29a-975c0b230903">
              <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
              <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
              <parent ref="EID5a6371bc-3274-4230-af10-62c3fa2fca6c"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0b6cda30-60b9-4a6b-9675-e0d5820850b0">
                  <label>ISO-Elemente Nr. 70 und 71: Zugriffsbeschränkungen und Nutzungsbedingungen</label>
                  <description><![CDATA[bedingtes Pflichtelement: bei einer Existenz von otherConstraints in MD_LegalConstraints muss in accessConstraints oder useConstraints der Wert "otherRestrictions" vorkommen.]]></description>
                  <parent ref="EID556d6327-cfec-4685-b29a-975c0b230903"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='accessConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='otherConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='useConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_RestrictionCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='otherRestrictions'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'otherRestrictions' })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0)) then ()
   else ($messages0, $messages1)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID0b78b4a2-d79e-40c4-9c92-5aee114f0ab3">
      <label>CI_Address</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID58940218-5415-4c15-bb88-f51a8dbdd391">
          <label>ISO-Element Nr.: 383: Angabe des Bundeslands</label>
          <description><![CDATA[Angabe des Bundeslands in Adressangaben: nur Wert "Nordrhein-Westfalen" ist zugelassen]]></description>
          <parent ref="EID0b78b4a2-d79e-40c4-9c92-5aee114f0ab3"/>
          <testSteps>
            <TestStep id="EID370452ee-6dc6-42da-9f0a-aa5ea2cde210">
              <label>ISO-Element Nr.: 383: Angabe des Bundeslands</label>
              <description><![CDATA[Angabe des Bundeslands in Adressangaben: nur Wert "Nordrhein-Westfalen" ist zugelassen]]></description>
              <parent ref="EID58940218-5415-4c15-bb88-f51a8dbdd391"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfc28853d-7915-489f-90c9-0bde73a39f59">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'administrativeArea' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>Nordrhein-Westfalen</li></ul>]]></description>
                  <parent ref="EID370452ee-6dc6-42da-9f0a-aa5ea2cde210"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('Nordrhein-Westfalen')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='administrativeArea' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'administrativeArea', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID31dfec9f-079c-4a3e-998a-605664f2179f">
          <label>ISO-Element Nr. 385: Angabe des Staats</label>
          <description><![CDATA[Angabe des Staats in Adressangaben: nur Wert "Deutschland" ist zugelassen]]></description>
          <parent ref="EID0b78b4a2-d79e-40c4-9c92-5aee114f0ab3"/>
          <testSteps>
            <TestStep id="EID668d98a4-f08b-4d82-8d84-63798219b3ee">
              <label>ISO-Element Nr. 385: Angabe des Staats</label>
              <description><![CDATA[Angabe des Staats in Adressangaben: nur Wert "Deutschland" ist zugelassen]]></description>
              <parent ref="EID31dfec9f-079c-4a3e-998a-605664f2179f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID318ef615-2f93-44fc-b17e-bff4419a1aa1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'country' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>Deutschland</li></ul>]]></description>
                  <parent ref="EID668d98a4-f08b-4d82-8d84-63798219b3ee"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('Deutschland')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='country' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'country', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDae2f73e4-10de-4627-86a0-4b5eb1678948">
          <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
          <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
          <parent ref="EID0b78b4a2-d79e-40c4-9c92-5aee114f0ab3"/>
          <testSteps>
            <TestStep id="EIDf57f4937-f7a3-4e96-a6c9-781d3fa682e8">
              <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
              <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
              <parent ref="EIDae2f73e4-10de-4627-86a0-4b5eb1678948"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDe607076c-e615-4bb2-a6e1-84a5f24e8e96">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'electronicMailAddress' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDf57f4937-f7a3-4e96-a6c9-781d3fa682e8"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='electronicMailAddress' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc75674e4-36cd-47be-b2e3-aba29bd453b9">
          <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
          <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
          <parent ref="EID0b78b4a2-d79e-40c4-9c92-5aee114f0ab3"/>
          <testSteps>
            <TestStep id="EID88b3616c-3913-4c07-9bc6-34639e15047b">
              <label>ISO-Element Nr. 386: E-Mail-Adresse</label>
              <description><![CDATA[Pflichtelement in Adressangaben: die E-Mail-Adresse muss belegt sein]]></description>
              <parent ref="EIDc75674e4-36cd-47be-b2e3-aba29bd453b9"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc9d6d412-f4af-4609-a7b6-6de72e52a815">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'electronicMailAddress' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID88b3616c-3913-4c07-9bc6-34639e15047b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='electronicMailAddress' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'electronicMailAddress', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID598afebf-30e7-4c08-82a8-a6148763938b">
      <label>CI_Date</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID3d66aba1-a33a-458a-b9e6-5bf2654adeb6">
          <label>ISO-Element Nr. 395: Bedeutung des Datums</label>
          <description><![CDATA[Pflichtelement in Datumsangaben: die Bedeutung des Datums muss belegt sein.]]></description>
          <parent ref="EID598afebf-30e7-4c08-82a8-a6148763938b"/>
          <testSteps>
            <TestStep id="EID1a445127-eaac-49e0-8ac5-14dfd127827d">
              <label>ISO-Element Nr. 395: Bedeutung des Datums</label>
              <description><![CDATA[Pflichtelement in Datumsangaben: die Bedeutung des Datums muss belegt sein.]]></description>
              <parent ref="EID3d66aba1-a33a-458a-b9e6-5bf2654adeb6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDacd0dd5e-2c93-4bd7-9ce1-7fa886957564">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>creation</li><li>publication</li><li>revision</li></ul>]]></description>
                  <parent ref="EID1a445127-eaac-49e0-8ac5-14dfd127827d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('creation', 'publication', 'revision')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_Date' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='dateType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_Date', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'dateType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDc5b1fcf8-1dc6-41f4-b299-43433b380636">
      <label>MD_CoverageDescription</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID15ace868-a460-4c23-8f5a-36540eab48ec">
          <label>ISO-Element Nr. 241: Inhaltstyp zu den Aufnahmeeigenschaften</label>
          <description><![CDATA[Pflichtelement bei Angaben zu den Aufnahmeeigenschaften: der Inhaltstyp muss belegt sein.]]></description>
          <parent ref="EIDc5b1fcf8-1dc6-41f4-b299-43433b380636"/>
          <testSteps>
            <TestStep id="EIDececef49-5d5a-41ac-9595-c7bba8d4f606">
              <label>ISO-Element Nr. 241: Inhaltstyp zu den Aufnahmeeigenschaften</label>
              <description><![CDATA[Pflichtelement bei Angaben zu den Aufnahmeeigenschaften: der Inhaltstyp muss belegt sein.]]></description>
              <parent ref="EID15ace868-a460-4c23-8f5a-36540eab48ec"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7c1a855b-fa79-4518-90ca-cbbb7f530664">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contentType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>thematicClassification</li><li>image</li><li>physicalMeasurement</li></ul>]]></description>
                  <parent ref="EIDececef49-5d5a-41ac-9595-c7bba8d4f606"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('thematicClassification', 'image', 'physicalMeasurement')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_CoverageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='contentType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_CoverageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'contentType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3ccc9d8b-272e-413b-80a1-4711f29c2f6e">
          <label>ISO-Element Nr. 242: dimension</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDc5b1fcf8-1dc6-41f4-b299-43433b380636"/>
          <testSteps>
            <TestStep id="EIDa80085b3-bc5a-4a74-851b-8c6dc963d319">
              <label>ISO-Element Nr. 242: dimension</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3ccc9d8b-272e-413b-80a1-4711f29c2f6e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc5604c47-8737-49e0-8cb9-0a7119f25f04">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dimension' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDa80085b3-bc5a-4a74-851b-8c6dc963d319"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_CoverageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dimension' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_CoverageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959">
      <label>MD_ImageDescription</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID578fb1f7-a2cb-447c-9244-e96fe10655c0">
          <label>ISO-Element Nr. 242: dimension</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID362e736f-a209-460c-a445-2bcddf466b34">
              <label>ISO-Element Nr. 242: dimension</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID578fb1f7-a2cb-447c-9244-e96fe10655c0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa741371a-72ac-4a1b-b953-4e9e5465e42b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dimension' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID362e736f-a209-460c-a445-2bcddf466b34"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dimension' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID34a20d10-5526-4511-9c03-bf01a7b903a6">
          <label>ISO-Element Nr. 244: illumination­Elevation­Angle</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID9e441f91-bd99-41aa-bc86-7071aed55f90">
              <label>ISO-Element Nr. 244: illumination­Elevation­Angle</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID34a20d10-5526-4511-9c03-bf01a7b903a6"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID950ab66c-c476-4311-85d8-c57317118dfb">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'illuminationElevationAngle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID9e441f91-bd99-41aa-bc86-7071aed55f90"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='illuminationElevationAngle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID07239d42-1107-466b-9245-87541a0adb51">
          <label>ISO-Element Nr. 245: illumination­Azimuth­Angle</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID1a695c08-573f-47b3-a4b9-d750b06cbeb5">
              <label>ISO-Element Nr. 245: illumination­Azimuth­Angle</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID07239d42-1107-466b-9245-87541a0adb51"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID10c018af-087f-4cbe-bda1-c55bed99571d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'illuminationAzimuthAngle' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1a695c08-573f-47b3-a4b9-d750b06cbeb5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='illuminationAzimuthAngle' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4cdcf477-28b9-46ba-ad04-0e7bdde38bd2">
          <label>ISO-Element Nr. 246: imaging­Condition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID6a2af485-1ecf-4fb6-b8d0-fc8fee0a4892">
              <label>ISO-Element Nr. 246: imaging­Condition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4cdcf477-28b9-46ba-ad04-0e7bdde38bd2"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2414e6b2-6adc-437f-af92-a49e8e8be983">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imagingCondition' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>terrainMasking</li><li>heavySmokeOrDust</li><li>rain</li><li>snow</li><li>blurredImage</li><li>semiDarkness</li><li>night</li><li>shadow</li><li>cloud</li><li>degradingObliquity</li><li>fog</li></ul>]]></description>
                  <parent ref="EID6a2af485-1ecf-4fb6-b8d0-fc8fee0a4892"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('terrainMasking', 'heavySmokeOrDust', 'rain', 'snow', 'blurredImage', 'semiDarkness', 'night', 'shadow', 'cloud', 'degradingObliquity', 'fog')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='imagingCondition' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'imagingCondition', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID70eff077-ffcd-402f-a84b-7954ac65b2e1">
          <label>ISO-Element Nr. 246: imaging­Condition</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID8b8598dc-8c6e-45d0-8bc4-f772d5c90b12">
              <label>ISO-Element Nr. 246: imaging­Condition</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID70eff077-ffcd-402f-a84b-7954ac65b2e1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID21c76623-60a5-4abd-9dd4-d9fb70abb2c3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imagingCondition' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8b8598dc-8c6e-45d0-8bc4-f772d5c90b12"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='imagingCondition' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID18cbb82d-172e-4342-85e2-dc148deece05">
          <label>ISO-Element Nr. 247: image­Quality­Code</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID6ab31b10-a7c8-4a43-80dd-4f1a23c21670">
              <label>ISO-Element Nr. 247: image­Quality­Code</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID18cbb82d-172e-4342-85e2-dc148deece05"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID379686eb-8570-4ad1-9ba7-4bd23d3e379d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'imageQualityCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID6ab31b10-a7c8-4a43-80dd-4f1a23c21670"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='imageQualityCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID201a386d-4d6b-4557-be0c-7e197f5e3197">
          <label>ISO-Element Nr. 249: processing­Level­Code</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID89f07fc9-c0fa-4abd-aab0-6c16646878bd">
              <label>ISO-Element Nr. 249: processing­Level­Code</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID201a386d-4d6b-4557-be0c-7e197f5e3197"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa38fc9ea-63fa-456c-b157-c4b6fb69ca11">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'processingLevelCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID89f07fc9-c0fa-4abd-aab0-6c16646878bd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='processingLevelCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6d6a1e2f-45d1-4cc0-b400-036fe64dfdd1">
          <label>ISO-Element Nr. 250: compression­Generation­Quantity</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID994fef05-cf16-4971-946d-716adbf69b53">
              <label>ISO-Element Nr. 250: compression­Generation­Quantity</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID6d6a1e2f-45d1-4cc0-b400-036fe64dfdd1"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID71a5be55-c580-4ae3-814f-753505dc1781">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'compressionGenerationQuantity' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID994fef05-cf16-4971-946d-716adbf69b53"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='compressionGenerationQuantity' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID4e8e6a59-fce9-4540-b65b-ed3aa19f0f6f">
          <label>ISO-Element Nr. 251: triangulation­Indicator</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EIDb6fba4c9-101b-4987-98e2-9ffc970adfb5">
              <label>ISO-Element Nr. 251: triangulation­Indicator</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID4e8e6a59-fce9-4540-b65b-ed3aa19f0f6f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID06b139b8-2ba2-4a13-9121-0a4ec9e1eb0d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'triangulationIndicator' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDb6fba4c9-101b-4987-98e2-9ffc970adfb5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='triangulationIndicator' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID53b7997e-547c-476c-95d7-e1a942e4d1ca">
          <label>ISO-Element Nr. 252: radiometric­Calibration­Data­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID265d83c7-eeca-4a34-a1e9-adbef25181f7">
              <label>ISO-Element Nr. 252: radiometric­Calibration­Data­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID53b7997e-547c-476c-95d7-e1a942e4d1ca"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2acc29b6-9a7c-41ad-865e-b5d8f0a0f2bc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'radiometricCalibrationDataAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID265d83c7-eeca-4a34-a1e9-adbef25181f7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='radiometricCalibrationDataAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDced1e51c-37d5-4aa7-909a-9f6ddc11ee23">
          <label>ISO-Element Nr. 253: camera­Calibration­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID2e55d46f-a9f9-4563-8774-4071e6facca2">
              <label>ISO-Element Nr. 253: camera­Calibration­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDced1e51c-37d5-4aa7-909a-9f6ddc11ee23"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd0136416-e55f-47d9-a816-aa5e6ad8d489">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'cameraCalibrationInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID2e55d46f-a9f9-4563-8774-4071e6facca2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='cameraCalibrationInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDa016c2ce-da41-4a31-b2c5-80dfaf65a906">
          <label>ISO-Element Nr. 254: film­Distortion­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EIDb5b26c37-549e-4294-a5ce-b57323f8c7da">
              <label>ISO-Element Nr. 254: film­Distortion­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDa016c2ce-da41-4a31-b2c5-80dfaf65a906"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID10a307de-116a-41aa-94a4-0308407daddc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'filmDistortionInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDb5b26c37-549e-4294-a5ce-b57323f8c7da"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='filmDistortionInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDd01660ce-bea5-402e-badd-8b87292d9e4b">
          <label>ISO-Element Nr. 255: lens­Distortion­Information­Availability</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDaa37c2f7-43fa-4d44-b8da-7221c4cff959"/>
          <testSteps>
            <TestStep id="EID2660ab03-a5f5-42c8-a271-d325934ce078">
              <label>ISO-Element Nr. 255: lens­Distortion­Information­Availability</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDd01660ce-bea5-402e-badd-8b87292d9e4b"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDcc4cb270-486c-4e3d-8bf1-d4015f43ee5b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'lensDistortionInformationAvailability' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID2660ab03-a5f5-42c8-a271-d325934ce078"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ImageDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='lensDistortionInformationAvailability' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_ImageDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID2ea139fc-1fa3-4bff-8e1e-e9a133ebafe4">
      <label>MD_ScopeDescription</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDd96e2438-5cf4-4087-9f99-8b6f3b746dea">
          <label>ISO-Element Nr. 149: Beschreibung der Bezugsebene</label>
          <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
          <parent ref="EID2ea139fc-1fa3-4bff-8e1e-e9a133ebafe4"/>
          <testSteps>
            <TestStep id="EID3c049ae7-b21e-4c0c-91a9-2d070857992f">
              <label>ISO-Element Nr. 149: Beschreibung der Bezugsebene</label>
              <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt.]]></description>
              <parent ref="EIDd96e2438-5cf4-4087-9f99-8b6f3b746dea"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa6a1f22b-db33-48a9-911a-cdcf3225d2ad">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_ScopeDescription' and namespace 'http://www.isotc211.org/2005/gmd' must contain one and only one of the following options: <br><ul><li>attributes</li><li>features</li><li>dataset</li><li>other</li></ul>]]></description>
                  <parent ref="EID3c049ae7-b21e-4c0c-91a9-2d070857992f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $countElements := count($typeFound/*)
       let $countChoice0 := count($typeFound/*[local-name()='attributes' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice1 := count($typeFound/*[local-name()='features' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice2 := count($typeFound/*[local-name()='dataset' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $countChoice3 := count($typeFound/*[local-name()='other' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if ($countElements gt 1) then
         local:addMessage('TR.moreThanOneOptionError', map { 'localName': 'MD_ScopeDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else if (($countChoice0 + $countChoice1 + $countChoice2 + $countChoice3) lt 1) then 
         local:addMessage('TR.noValidOptionError', map { 'localName': 'MD_ScopeDescription', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9bbabb93-0fd5-47e5-83cb-8514a10b1254">
          <label>ISO-Element Nr. 149: Beschreibung des Geltungsbereichs</label>
          <description><![CDATA[bedingtes Pflichtelement in MD_ScopeDescription: eines der Elemente attributes, features, dataset oder distance muss belegt sein.]]></description>
          <parent ref="EID2ea139fc-1fa3-4bff-8e1e-e9a133ebafe4"/>
          <testSteps>
            <TestStep id="EID5f68c837-f914-4893-91d3-572aa5301871">
              <label>ISO-Element Nr. 149: Beschreibung des Geltungsbereichs</label>
              <description><![CDATA[bedingtes Pflichtelement in MD_ScopeDescription: eines der Elemente attributes, features, dataset oder distance muss belegt sein.]]></description>
              <parent ref="EID9bbabb93-0fd5-47e5-83cb-8514a10b1254"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID83f57912-42c6-46e5-91bf-404560c9da24">
                  <label>ISO-Element Nr. 149: Beschreibung des Geltungsbereichs</label>
                  <description><![CDATA[bedingtes Pflichtelement in MD_ScopeDescription: eines der Elemente attributes, features, dataset oder distance muss belegt sein.]]></description>
                  <parent ref="EID5f68c837-f914-4893-91d3-572aa5301871"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='attributes' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'attributes', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages1 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='features' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'features', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages2 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='dataset' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'dataset', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
let $messages3 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       let $thenPropertyCount := count($typeFound/*[local-name()='dataQualityInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='levelDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_ScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='other' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount gt 0) then 
         if ($thenPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'other', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
         else ()
       else ()
    )[position() le $limitErrors]
 let $messages := 
   if ((count($messages0) eq 0) or (count($messages1) eq 0) or (count($messages2) eq 0) or (count($messages3) eq 0)) then ()
   else ($messages0, $messages1, $messages2, $messages3)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID58ae1c78-2168-470b-adf7-a5e2055d989d">
      <label>MD_SecurityConstraints</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDec1dae6a-a171-43d4-9655-512919df0140">
          <label>ISO-Element Nr. 74: Sicherheitseinstufung</label>
          <description><![CDATA[Pflichtelement in Angaben zu Sicherheitseinschränkungen: die Sicherheitseinstufung muss vorhanden sein.]]></description>
          <parent ref="EID58ae1c78-2168-470b-adf7-a5e2055d989d"/>
          <testSteps>
            <TestStep id="EID4f1d104e-e7d5-4ab1-9213-7a06a5f90aa2">
              <label>ISO-Element Nr. 74: Sicherheitseinstufung</label>
              <description><![CDATA[Pflichtelement in Angaben zu Sicherheitseinschränkungen: die Sicherheitseinstufung muss vorhanden sein.]]></description>
              <parent ref="EIDec1dae6a-a171-43d4-9655-512919df0140"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc6695f7b-24f8-4901-8a6a-03311ce06a74">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'classification' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>restricted</li><li>unclassified</li><li>confidential</li><li>secret</li><li>topSecret</li></ul>]]></description>
                  <parent ref="EID4f1d104e-e7d5-4ab1-9213-7a06a5f90aa2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('restricted', 'unclassified', 'confidential', 'secret', 'topSecret')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='classification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'classification', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDb61888a3-868d-41ab-9756-1adfb97a23cc">
          <label>ISO-Element Nr. 75: user­Note</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58ae1c78-2168-470b-adf7-a5e2055d989d"/>
          <testSteps>
            <TestStep id="EIDdb767e04-4a05-407e-a7b8-db10dfcc2731">
              <label>ISO-Element Nr. 75: user­Note</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDb61888a3-868d-41ab-9756-1adfb97a23cc"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0ec02848-ec85-4b63-9d90-5643092e808f">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'userNote' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdb767e04-4a05-407e-a7b8-db10dfcc2731"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='userNote' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDe9044665-23e4-4ec1-ac45-10d63be0aaef">
          <label>ISO-Element Nr. 76: classification­System</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58ae1c78-2168-470b-adf7-a5e2055d989d"/>
          <testSteps>
            <TestStep id="EIDdaa56d3c-0e36-4c7b-a46e-4934c945b117">
              <label>ISO-Element Nr. 76: classification­System</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDe9044665-23e4-4ec1-ac45-10d63be0aaef"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7376aaf8-6e8f-4e3a-8843-9a35178ffd89">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'classificationSystem' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdaa56d3c-0e36-4c7b-a46e-4934c945b117"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='classificationSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID1c8dd21d-6dfd-4ccc-8a58-bb2aceba3716">
          <label>ISO-Element Nr. 77: handling­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID58ae1c78-2168-470b-adf7-a5e2055d989d"/>
          <testSteps>
            <TestStep id="EID7f3c443f-faff-4457-8e90-9c2b9b2fa0e3">
              <label>ISO-Element Nr. 77: handling­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID1c8dd21d-6dfd-4ccc-8a58-bb2aceba3716"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5a548585-0169-4051-9673-da24d60e1561">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'handlingDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID7f3c443f-faff-4457-8e90-9c2b9b2fa0e3"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_SecurityConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='handlingDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_SecurityConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID183e5920-495f-4175-a89f-61fa0a25110f">
      <label>EX_GeographicBoundingBox</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID6e3b3ab2-44b0-4b15-840d-703a162b7278">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID183e5920-495f-4175-a89f-61fa0a25110f"/>
          <testSteps>
            <TestStep id="EID3d153804-230d-4384-9d56-8bea2c4c23b4">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID6e3b3ab2-44b0-4b15-840d-703a162b7278"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9ba50bb6-818c-4da5-a50a-bf4377a5ec67">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID3d153804-230d-4384-9d56-8bea2c4c23b4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='EX_GeographicBoundingBox' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'EX_GeographicBoundingBox', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6d08c30e-6690-44e0-b0ff-0dfcc5ec720d">
          <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
          <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
          <parent ref="EID183e5920-495f-4175-a89f-61fa0a25110f"/>
          <testSteps>
            <TestStep id="EID8ddeaa18-0ab4-4070-8031-dffdf84b0d30">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID6d08c30e-6690-44e0-b0ff-0dfcc5ec720d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID896c08f6-5154-4a92-be60-d4f7f3ecc455">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID8ddeaa18-0ab4-4070-8031-dffdf84b0d30"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='EX_GeographicBoundingBox' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EIDe7c583c2-6e85-4423-b14c-89a836441589">
      <label>MD_AggregateInformation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDb4c2834e-e567-4d47-9906-f082c16d41b5">
          <label>ISO-Element Nr. 66.2: aggregate­Data­Set­Name</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EIDdc750c50-83ad-4dd9-bef8-c0a768c1bdcd">
              <label>ISO-Element Nr. 66.2: aggregate­Data­Set­Name</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDb4c2834e-e567-4d47-9906-f082c16d41b5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbc71a1fa-6ffe-468a-ba8d-fb1938318f1b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetName' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdc750c50-83ad-4dd9-bef8-c0a768c1bdcd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='aggregateDataSetName' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID6970df79-aba4-4523-998c-ac74659a4b54">
          <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EIDa92025dc-cb4f-4680-9f05-979991d8101b">
              <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
              <parent ref="EID6970df79-aba4-4523-998c-ac74659a4b54"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdac86ce1-5e5d-41f6-90c2-3e795c181a39">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDa92025dc-cb4f-4680-9f05-979991d8101b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='aggregateDataSetIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID895170f5-1e63-4dae-a78e-2e9440d9152e">
          <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EID3c257a37-4fdc-4d61-83f7-c91f70e499ad">
              <label>ISO-Element Nr. 66.3: Identifikator zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement in Informationen zu aggregierten Daten: der Identifikator muss vorhanden sein.]]></description>
              <parent ref="EID895170f5-1e63-4dae-a78e-2e9440d9152e"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID3856ae71-05fd-4582-964f-3f4cdf71cdb9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'aggregateDataSetIdentifier' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID3c257a37-4fdc-4d61-83f7-c91f70e499ad"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='aggregateDataSetIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'aggregateDataSetIdentifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3dbc16e5-149d-4099-8b28-ec9b38438f9f">
          <label>ISO-Element Nr. 66.4: Assoziationstyp zu aggregierten Daten</label>
          <description><![CDATA[Pflichtelement bei Angabe von Informationen zu aggregierten Daten: der Assoziationstyp muss vorhanden sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt, nur "crossReference" ist zulässig.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EID8aeb00a6-cd8d-4d67-b131-15d5cad576f9">
              <label>ISO-Element Nr. 66.4: Assoziationstyp zu aggregierten Daten</label>
              <description><![CDATA[Pflichtelement bei Angabe von Informationen zu aggregierten Daten: der Assoziationstyp muss vorhanden sein. Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt, nur "crossReference" ist zulässig.]]></description>
              <parent ref="EID3dbc16e5-149d-4099-8b28-ec9b38438f9f"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID15368029-155b-442f-8c4c-ede2645ef230">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'associationType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>crossReference</li></ul>]]></description>
                  <parent ref="EID8aeb00a6-cd8d-4d67-b131-15d5cad576f9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('crossReference')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='associationType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'associationType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7c140c79-fea3-4197-bac0-19c4cae443e8">
          <label>ISO-Element Nr. 66.5: initiative­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EID7830b5f1-6214-4f6b-93e0-f8cc6dfa0e5c">
              <label>ISO-Element Nr. 66.5: initiative­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID7c140c79-fea3-4197-bac0-19c4cae443e8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDa221602c-e343-4bd6-8b1e-ab3b0570391d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'initiativeType' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>operation</li><li>project</li><li>exercise</li><li>task</li><li>mission</li><li>process</li><li>program</li><li>collection</li><li>campaign</li><li>experiment</li><li>trial</li><li>sensor</li><li>platform</li><li>study</li><li>investigation</li></ul>]]></description>
                  <parent ref="EID7830b5f1-6214-4f6b-93e0-f8cc6dfa0e5c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('operation', 'project', 'exercise', 'task', 'mission', 'process', 'program', 'collection', 'campaign', 'experiment', 'trial', 'sensor', 'platform', 'study', 'investigation')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='initiativeType' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'initiativeType', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID24802bf5-4802-4a0b-83b4-af4ee301cae8">
          <label>ISO-Element Nr. 66.5: initiative­Type</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EIDe7c583c2-6e85-4423-b14c-89a836441589"/>
          <testSteps>
            <TestStep id="EID50cdfeae-440b-4c25-9de3-86c5b7197954">
              <label>ISO-Element Nr. 66.5: initiative­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID24802bf5-4802-4a0b-83b4-af4ee301cae8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6ba79daf-3ec2-411f-a7f1-c3f280297c2d">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'initiativeType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID50cdfeae-440b-4c25-9de3-86c5b7197954"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_AggregateInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='initiativeType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_AggregateInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID4ec79e56-88aa-45fc-975a-be9052c47716">
      <label>MD_Usage</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID77a187ef-3825-48d0-b167-37494788a5b8">
          <label>ISO-Element Nr. 64: usage­Date­Time</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4ec79e56-88aa-45fc-975a-be9052c47716"/>
          <testSteps>
            <TestStep id="EID1ff12035-b614-40ad-b228-9a25e31e0155">
              <label>ISO-Element Nr. 64: usage­Date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID77a187ef-3825-48d0-b167-37494788a5b8"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb3b46eed-7603-40f9-9b55-a5aed6e30f44">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'usageDateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID1ff12035-b614-40ad-b228-9a25e31e0155"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Usage' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='usageDateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Usage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf9bb40ac-c370-4851-95af-b9366d2e23b5">
          <label>ISO-Element Nr. 65: user­Determined­Limitations</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID4ec79e56-88aa-45fc-975a-be9052c47716"/>
          <testSteps>
            <TestStep id="EID98233db4-0ab5-4021-a06c-b021d27a3e5b">
              <label>ISO-Element Nr. 65: user­Determined­Limitations</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf9bb40ac-c370-4851-95af-b9366d2e23b5"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID900d905b-e38d-41e1-b6c5-f01b4e9d2f34">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'userDeterminedLimitations' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID98233db4-0ab5-4021-a06c-b021d27a3e5b"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Usage' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='userDeterminedLimitations' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Usage', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID44b313a0-b28f-4e33-9a21-c7c7b24f063a">
      <label>MD_Distributor</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID657e76fa-83d9-42b7-b419-024669a32e7a">
          <label>ISO-Element Nr. 282: distributor­Format</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID44b313a0-b28f-4e33-9a21-c7c7b24f063a"/>
          <testSteps>
            <TestStep id="EIDdc53b333-d6ac-4871-87ff-b132d42cd344">
              <label>ISO-Element Nr. 282: distributor­Format</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID657e76fa-83d9-42b7-b419-024669a32e7a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID08ee07ab-44f6-48a3-ade0-42e5749e6bfa">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributorFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDdc53b333-d6ac-4871-87ff-b132d42cd344"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributorFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distributor', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf5c5e476-e767-4f3a-b155-5fc0636e7d64">
          <label>ISO-Element Nr. 283: distributor­Transfer­Options</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID44b313a0-b28f-4e33-9a21-c7c7b24f063a"/>
          <testSteps>
            <TestStep id="EID6b60f0c1-cd68-4441-90b1-f709b5c2e189">
              <label>ISO-Element Nr. 283: distributor­Transfer­Options</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EIDf5c5e476-e767-4f3a-b155-5fc0636e7d64"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID43da6351-a30f-4d85-803d-1b97bd8f1727">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'distributorTransferOptions' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID6b60f0c1-cd68-4441-90b1-f709b5c2e189"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_Distributor' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='distributorTransferOptions' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_Distributor', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID7682ab6c-75b4-4126-a54c-341de6a92d9d">
      <label>MD_MaintenanceInformation</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDe40800bb-67ec-4779-ba9e-c107a3b5567a">
          <label>ISO-Element Nr. 143: Pflegeintervall zur Laufendhaltung</label>
          <description><![CDATA[Pflichtelement in Angaben zur Laufendhaltung: das Pflegeintervall muss vorhanden sein.]]></description>
          <parent ref="EID7682ab6c-75b4-4126-a54c-341de6a92d9d"/>
          <testSteps>
            <TestStep id="EIDcecc7b27-0e0b-4ae7-9a12-d00f1fa2637d">
              <label>ISO-Element Nr. 143: Pflegeintervall zur Laufendhaltung</label>
              <description><![CDATA[Pflichtelement in Angaben zur Laufendhaltung: das Pflegeintervall muss vorhanden sein.]]></description>
              <parent ref="EIDe40800bb-67ec-4779-ba9e-c107a3b5567a"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID922303de-ab04-4e77-89b2-fada558654f7">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'maintenanceAndUpdateFrequency' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>irregular</li><li>continual</li><li>daily</li><li>biannually</li><li>monthly</li><li>quarterly</li><li>asNeeded</li><li>notPlanned</li><li>weekly</li><li>fortnightly</li><li>annually</li><li>unknown</li></ul>]]></description>
                  <parent ref="EIDcecc7b27-0e0b-4ae7-9a12-d00f1fa2637d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('irregular', 'continual', 'daily', 'biannually', 'monthly', 'quarterly', 'asNeeded', 'notPlanned', 'weekly', 'fortnightly', 'annually', 'unknown')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='maintenanceAndUpdateFrequency' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'maintenanceAndUpdateFrequency', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID2c9f4e6c-e0b9-4fe8-99c9-5dafe0fe5aed">
          <label>ISO-Element Nr. 146: update­Scope</label>
          <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
          <parent ref="EID7682ab6c-75b4-4126-a54c-341de6a92d9d"/>
          <testSteps>
            <TestStep id="EIDc109c27b-f1a5-41dd-bc44-deb47e92f8f6">
              <label>ISO-Element Nr. 146: update­Scope</label>
              <description><![CDATA[Der zulässige Werteumfang ist gegenüber der ISO 19115 eingeschränkt (hier nur "dataset", "series", "tile" und "featureType" erlaubt).]]></description>
              <parent ref="EID2c9f4e6c-e0b9-4fe8-99c9-5dafe0fe5aed"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDdfa2dbf6-6f2c-41a7-803f-18882234f412">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'updateScope' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>dataset</li><li>series</li><li>tile</li><li>featureType</li></ul>]]></description>
                  <parent ref="EIDc109c27b-f1a5-41dd-bc44-deb47e92f8f6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('dataset', 'series', 'tile', 'featureType')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='updateScope' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       return
         if ($propertyFound and not($propertyFound/*/text() = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound/*/text(), 'propName': 'updateScope', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID3c606543-9e71-4e6d-9fba-98fd34b2c2b0">
          <label>ISO-Element Nr. 147: update­Scope­Description</label>
          <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
          <parent ref="EID7682ab6c-75b4-4126-a54c-341de6a92d9d"/>
          <testSteps>
            <TestStep id="EID23588bdd-d9bd-4624-9309-7ed3817b9a60">
              <label>ISO-Element Nr. 147: update­Scope­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID3c606543-9e71-4e6d-9fba-98fd34b2c2b0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID151245ab-3c13-48cc-9f11-8e6086bece13">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'updateScopeDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID23588bdd-d9bd-4624-9309-7ed3817b9a60"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='updateScopeDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID7cafd389-2196-4cc8-8920-35b2c87c80cd">
          <label>ISO-Element Nr. 8: verantwortliche Stelle Metadaten</label>
          <description><![CDATA[Pflichtelement: mindestens eine für die Metadaten verantwortliche Stelle muss angegeben sein.]]></description>
          <parent ref="EID7682ab6c-75b4-4126-a54c-341de6a92d9d"/>
          <testSteps>
            <TestStep id="EID03b6ce72-0740-46d8-a240-d068f2821d74">
              <label>ISO-Element Nr. 8: verantwortliche Stelle Metadaten</label>
              <description><![CDATA[Pflichtelement: mindestens eine für die Metadaten verantwortliche Stelle muss angegeben sein.]]></description>
              <parent ref="EID7cafd389-2196-4cc8-8920-35b2c87c80cd"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc53725c2-8350-432b-8a40-fb5ec3e25a61">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'contact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID03b6ce72-0740-46d8-a240-d068f2821d74"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_MaintenanceInformation' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_MaintenanceInformation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID1b13133f-4eaf-42ae-8995-9664fac99c03">
      <label>CI_ResponsibleParty</label>
      <description><![CDATA[This is a test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EIDd12144e7-10df-4f86-9681-96700daf10b0">
          <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Name der Organisation muss vorhanden sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EID33d4977d-ca5e-4353-91fe-0a8134087ddd">
              <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Name der Organisation muss vorhanden sein.]]></description>
              <parent ref="EIDd12144e7-10df-4f86-9681-96700daf10b0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5965138e-0977-42aa-9930-2d9a94b87df6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'organisationName' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID33d4977d-ca5e-4353-91fe-0a8134087ddd"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='organisationName' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID9a44a06e-c0f6-4e70-80ce-84eaf49f82de">
          <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Name der Organisation muss vorhanden sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EID8c8f01e0-af73-4cf3-a26c-43468aa2e2a5">
              <label>ISO-Element Nr. 376: Name der verantwortlichen Stelle bzw. Organisation</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: der Name der Organisation muss vorhanden sein.]]></description>
              <parent ref="EID9a44a06e-c0f6-4e70-80ce-84eaf49f82de"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID637d3d52-9ac6-4ca8-b22a-8fda8911c5aa">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'organisationName' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID8c8f01e0-af73-4cf3-a26c-43468aa2e2a5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='organisationName' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'organisationName', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID681bf4cc-683f-4f01-b08a-0832a668b8b0">
          <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
          <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: die Funktion/Rolle der Organisation muss vorhanden sein. Für Kontakte im Kontext "zuständige Stelle für die Metadaten" ist mindestens 1x die Funktion "pointOfContact" zu verwenden.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDc3cff3c2-022a-4da4-b3fe-a0e66f93667a">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Pflichtelement in Angaben zur verantwortlichen Stelle: die Funktion/Rolle der Organisation muss vorhanden sein. Für Kontakte im Kontext "zuständige Stelle für die Metadaten" ist mindestens 1x die Funktion "pointOfContact" zu verwenden.]]></description>
              <parent ref="EID681bf4cc-683f-4f01-b08a-0832a668b8b0"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID0e3b84e4-859e-4110-830d-de9de96e07ea">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'role' and namespace 'http://www.isotc211.org/2005/gmd' should have a value that corresponds to one from the following list: <br><ul><li>custodian</li><li>processor</li><li>publisher</li><li>originator</li><li>pointOfContact</li><li>user</li><li>distributor</li><li>resourceProvider</li><li>owner</li><li>principalInvestigator</li><li>author</li></ul>]]></description>
                  <parent ref="EIDc3cff3c2-022a-4da4-b3fe-a0e66f93667a"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $codes := ('custodian', 'processor', 'publisher', 'originator', 'pointOfContact', 'user', 'distributor', 'resourceProvider', 'owner', 'principalInvestigator', 'author')
let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound
       let $propertyFound := $typeFound/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/data(@codeListValue)
       return
         if ($propertyFound and not($propertyFound = $codes)) then
           local:addMessage('TR.invalidPropertyValueError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'valueFound': $propertyFound, 'propName': 'role', 'allowedValues': string-join( $codes, ', ') })
 else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDebedf56e-a69e-4f47-9659-d20637036d2d">
          <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDec1338ce-8593-4d66-bcfb-e1e0e796f78e">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDebedf56e-a69e-4f47-9659-d20637036d2d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID386f6c0b-90f6-496f-9587-8aa6dd1d8e4e">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDec1338ce-8593-4d66-bcfb-e1e0e796f78e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDabbf3961-2a5a-4cd6-9dc4-b02c4c7d9846">
          <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EID859490da-e908-431b-b81d-1296beccc5b5">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDabbf3961-2a5a-4cd6-9dc4-b02c4c7d9846"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDc00d8127-8d0e-46d5-a44b-d90ffdac0bc1">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID859490da-e908-431b-b81d-1296beccc5b5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID22355c05-462a-4769-b3b6-503204ba7c11">
          <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
          <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDe30be801-8423-458f-b6ba-0d5ab492b893">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EID22355c05-462a-4769-b3b6-503204ba7c11"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfa6c1c53-4fcb-462e-8fc9-6afb03772968">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDe30be801-8423-458f-b6ba-0d5ab492b893"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID118325f7-58b9-4554-8354-5f9253e22e25">
          <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EID5cb4782f-09ae-4360-a306-f3432e4636b7">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID118325f7-58b9-4554-8354-5f9253e22e25"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID295b2486-27b8-44f0-a767-be99d37c120b">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID5cb4782f-09ae-4360-a306-f3432e4636b7"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDf3bad3db-190a-43ad-8449-e530aab7cbcf">
          <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDbec96029-bb48-4589-b1a5-8f7f3929a133">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDf3bad3db-190a-43ad-8449-e530aab7cbcf"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID74912f3e-a676-4235-99c0-4d3993e780e1">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDbec96029-bb48-4589-b1a5-8f7f3929a133"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDad3db7d3-7798-4c0b-9a21-cb790283910d">
          <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
          <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDca21f42d-09dd-447c-99e7-eacab6f31269">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EIDad3db7d3-7798-4c0b-9a21-cb790283910d"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID6eb2fd21-9a35-4250-8a09-6ac3fbccb402">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDca21f42d-09dd-447c-99e7-eacab6f31269"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EID92c5255a-d507-42cf-8323-e63772495abc">
          <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDd30059ee-532a-44fc-a604-da17af4bc767">
              <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EID92c5255a-d507-42cf-8323-e63772495abc"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID7c7cda22-7847-463c-bccd-26e3fa67ea10">
                  <label>ISO-Element Nr. 378: Kontakt zur verantwortlichen Stelle für die Metadaten</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element contact (ISO-Nr. 8) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EIDd30059ee-532a-44fc-a604-da17af4bc767"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDbfc0dfad-8042-4a62-b15c-68935f002872">
          <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
          <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EID202f4c22-5aad-4a90-8184-8ede01ffd244">
              <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
              <parent ref="EIDbfc0dfad-8042-4a62-b15c-68935f002872"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID2cc579b8-9a19-43eb-881b-36fd1b1ad567">
                  <label>ISO-Element Nr. 378:  Kontakt zur verantwortlichen Stelle für den Datenbestand/die Anwendung</label>
                  <description><![CDATA[bedingtes Pflichtelement in CI_ResponsibleParty: bei Aufruf über Element pointOfContact (ISO-Nr. 29) muss das Element contactInfo belegt sein.]]></description>
                  <parent ref="EID202f4c22-5aad-4a90-8184-8ede01ffd244"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='identificationInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='contactInfo' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotExistingValue', map { 'localName': 'contactInfo', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
        <TestCase id="EIDc4c75414-f898-45a2-bcf2-4c7d06c9d728">
          <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
          <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
          <parent ref="EID1b13133f-4eaf-42ae-8995-9664fac99c03"/>
          <testSteps>
            <TestStep id="EIDcf2c5859-78df-4bba-a0a8-cc8dfb5e8a51">
              <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
              <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
              <parent ref="EIDc4c75414-f898-45a2-bcf2-4c7d06c9d728"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID10f79f64-f4c4-4783-b9ed-2680b49ab518">
                  <label>ISO-Element Nr. 379: Funktion der verantwortlichen Stelle</label>
                  <description><![CDATA[Bedingung: im Kontext des Aufrufs über Element contact (ISO-Nr. 8) muss das Element role in CI_ResponsibleParty mit "pointOfContact" belegt sein.]]></description>
                  <parent ref="EIDcf2c5859-78df-4bba-a0a8-cc8dfb5e8a51"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>
let $messages0 :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $typesFound := $record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd']
       for $typeFound in $typesFound 
         let $ifPropertyCount := count($typeFound/*[local-name()='contact' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='role' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='CI_RoleCode' and namespace-uri()='http://www.isotc211.org/2005/gmd'][@codeListValue='pointOfContact'])
         return 
       if ($ifPropertyCount eq 0) then 
           local:addMessage('TR.conditionNotMatchingValue', map { 'localName': 'codeListValue', 'namespace': '', 'fileIdentifier': $rid, 'filename': local:filename($record), 'expectedValue': 'pointOfContact' })       else ()
    )[position() le $limitErrors]
 let $messages := ($messages0)
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
    <TestModule id="EID61e93c51-be59-483e-b742-c4385b19bc41">
      <label>Default test module</label>
      <description><![CDATA[This is the default test module]]></description>
      <parent ref="EIDc217abe7-1fa7-4304-80ca-8fad9776bf9c"/>
      <testCases>
        <TestCase id="EID331ba99a-adde-440d-9bb0-68ecb294eb13">
          <label>Einschränkungen bei Objektarten</label>
          <description><![CDATA[Einschränkungen bei Objektarten]]></description>
          <parent ref="EID61e93c51-be59-483e-b742-c4385b19bc41"/>
          <testSteps>
            <TestStep id="EIDaec0d247-cf8f-4e3a-8418-95d78e65f2e2">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Contact' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb9f7a409-e0b6-4cd5-b647-317b33921af8">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Contact' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDaec0d247-cf8f-4e3a-8418-95d78e65f2e2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Contact' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Contact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID03f0eafd-f90b-4b9c-98e9-a30602cd1f1e">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_Metadata' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID786d478f-7ecd-4250-b417-d980bf09b368">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_Metadata' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID03f0eafd-f90b-4b9c-98e9-a30602cd1f1e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_Metadata' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_Metadata', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID52259cd7-7376-45c3-914f-278d1ebfbfa5">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_ResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfe3b0f4e-22c6-4e53-8181-c86039785973">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_ResponsibleParty' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID52259cd7-7376-45c3-914f-278d1ebfbfa5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_ResponsibleParty' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_ResponsibleParty', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID3a681ac5-de48-40ff-ae19-e5bcc00375cc">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'RS_Identifier' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5788024d-f83c-4495-a5a6-4cdd22b55fa5">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'RS_Identifier' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID3a681ac5-de48-40ff-ae19-e5bcc00375cc"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='RS_Identifier' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'RS_Identifier', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID91f0a286-1606-4482-a689-253d13fe61f2">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_Keywords' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID125943d9-6111-4740-86c4-b15923b7b430">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_Keywords' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID91f0a286-1606-4482-a689-253d13fe61f2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_Keywords' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_Keywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDff888489-93dd-4289-96a1-67c523682ca0">
              <label>ISO-Element Nr. 103: evaluation­Method­Type</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID40b52a1a-1eae-4a68-bf68-95b2d8c50908">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodType' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDff888489-93dd-4289-96a1-67c523682ca0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodType' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDf0a5c4d7-8012-41cf-b815-f3a1eff22a68">
              <label>ISO-Element Nr. 104: evaluation­Method­Description</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb8335cf8-9114-4cde-a084-bf21bd2e11ae">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationMethodDescription' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDf0a5c4d7-8012-41cf-b815-f3a1eff22a68"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationMethodDescription' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDbba172b4-f647-4348-81e8-aadd9c976890">
              <label>ISO-Element Nr. 105: evaluation­Procedure</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4bba8a7a-3497-40fc-8001-4ad40c932214">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'evaluationProcedure' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EIDbba172b4-f647-4348-81e8-aadd9c976890"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='evaluationProcedure' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID23f7aa47-5ff6-4807-9bcc-8dcefc379ca4">
              <label>ISO-Element Nr. 106: date­Time</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb4df81ff-fabc-4c00-850b-7bc805dab776">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'dateTime' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID23f7aa47-5ff6-4807-9bcc-8dcefc379ca4"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='dateTime' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID330c0682-1853-42fc-b05b-2e00caf46da5">
              <label>ISO-Element Nr. 107: Ergebnis zur Qualitätsaussage</label>
              <description><![CDATA[Pflichtelement in Qualitätsaussagen: die Angabe eines Ergebnisses muss vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDde33a505-78c6-4950-8633-ba50b114e3f2">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'result' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1 and a maximum cardinality of 1]]></description>
                  <parent ref="EID330c0682-1853-42fc-b05b-2e00caf46da5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractDQ_Element' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='result' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractDQ_Element', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDe30b621b-119e-48c9-9ae5-b8ad69c81f5e">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'DQ_Scope' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID48947b7c-ac7d-475b-bd88-9f9df518a6d3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'DQ_Scope' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDe30b621b-119e-48c9-9ae5-b8ad69c81f5e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='DQ_Scope' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'DQ_Scope', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID41a5f99d-d9b8-4e99-a62a-65d90ac0893d">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Address' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID602c66a0-8c65-4301-aa3d-55de6876bb34">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Address' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID41a5f99d-d9b8-4e99-a62a-65d90ac0893d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Address' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Address', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID8d4fbd6a-d999-4be7-9895-dc96f4fe52d2">
              <label>ISO-Element Nr. 27: credit</label>
              <description><![CDATA[Das Element ist nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID73bd7aa2-8e55-4ad6-b96f-2169f102026c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'credit' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID8d4fbd6a-d999-4be7-9895-dc96f4fe52d2"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='credit' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDd600464b-555c-4de4-a673-c3354cc2964e">
              <label>label</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'AbstractMD_Identification' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDb21f32e3-8d42-4048-961e-2756dc23f0ce">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'status' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 1]]></description>
                  <parent ref="EIDd600464b-555c-4de4-a673-c3354cc2964e"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='status' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDd07be88e-c886-4940-bfe8-6dbe46ca8796">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID68b83b13-04c4-46ae-8581-6896f7861abd">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDd07be88e-c886-4940-bfe8-6dbe46ca8796"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDb26ae7f7-a571-48c9-9a73-0914636038f0">
              <label>ISO-Element Nr. 29: verantwortliche Stelle für den Datenbestand/die Anwendung</label>
              <description><![CDATA[Pflichtelement: eine für den Datenbestand/die Anwendung verantwortliche Stelle muss benannt sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID5c1c6e2b-c7ac-4868-923f-68e5694514dc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'pointOfContact' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EIDb26ae7f7-a571-48c9-9a73-0914636038f0"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='pointOfContact' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'pointOfContact', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID424d5473-d87e-467a-92d4-9855e3ff6da5">
              <label>ISO-Element Nr. 32: resource­Format</label>
              <description><![CDATA[Das Element ist an dieser Stelle nicht Bestandteil des NRW-Metadatenprofils.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDef51e1cf-7fae-479d-a3bb-e11fc85555b1">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceFormat' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 0]]></description>
                  <parent ref="EID424d5473-d87e-467a-92d4-9855e3ff6da5"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceFormat' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDb6cd20d1-fe74-4af3-a883-28fd2d124ce6">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDbc5fa893-089b-4b44-88ea-46691c74f0df">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDb6cd20d1-fe74-4af3-a883-28fd2d124ce6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID1a213ac3-d42f-4549-a1c7-316373eac518">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDd938abcc-2e8f-4166-b263-ff7be33d79e6">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID1a213ac3-d42f-4549-a1c7-316373eac518"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'descriptiveKeywords', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDd4a1a7eb-9bef-4af1-bd31-3bd9abc27f40">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfa1b0343-8a9b-41f5-aeef-40952e726b39">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 1]]></description>
                  <parent ref="EIDd4a1a7eb-9bef-4af1-bd31-3bd9abc27f40"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'AbstractMD_Identification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID2a1daea4-fe0e-4a9f-94ed-ca421900350d">
              <label>ISO-Element Nr. 35: Nutzungsbedingungen und/oder Einschränkungen</label>
              <description><![CDATA[Pflichtelement: die Nutzungsbedingungen und/oder Einschränkungen müssen vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID67c0ecbb-d9c4-4da9-824a-eeb0cbe443cc">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'resourceConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID2a1daea4-fe0e-4a9f-94ed-ca421900350d"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractMD_Identification' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='resourceConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'resourceConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID8880493b-d0c3-4bf0-b550-cfd05193e5a1">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Date' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID54dc915f-b37a-425b-b592-3b0df2c37e41">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Date' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID8880493b-d0c3-4bf0-b550-cfd05193e5a1"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Date' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Date', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDc57db210-96bd-4223-bea1-2787db9fddd9">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_LegalConstraints' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID1a6fa9ec-761c-4551-8a3a-bf58cb8d958b">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_LegalConstraints' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDc57db210-96bd-4223-bea1-2787db9fddd9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_LegalConstraints' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_LegalConstraints', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDd8a5ecc4-4bfa-4d9e-96fb-1b310bc3c16c">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'DQ_DataQuality' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID65720950-fb32-4ce2-a70c-be63c19e5445">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'DQ_DataQuality' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDd8a5ecc4-4bfa-4d9e-96fb-1b310bc3c16c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='DQ_DataQuality' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'DQ_DataQuality', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDbb2ca098-54ed-4744-a650-232affd399bb">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_ReferenceSystem' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDde169d08-f4c5-4f22-b28b-f949e65ce34c">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_ReferenceSystem' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDbb2ca098-54ed-4744-a650-232affd399bb"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_ReferenceSystem' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_ReferenceSystem', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID1675a297-4c71-47cb-af04-8a6fdca1c46f">
              <label>ISO-Element Nr. 340: Angabe zur Interpretation des Identifikators</label>
              <description><![CDATA[Pflichtelement in der geografischen Ausdehnung mittels Identifikator: die Angabe, ob die geografische Ausdehnung innerhalb oder außerhalb der BoundingBox definiert werden soll, muss vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID9fa35cb9-5783-4b6e-9333-13c854df762a">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'extentTypeCode' and namespace 'http://www.isotc211.org/2005/gmd' should not be empty if it's present]]></description>
                  <parent ref="EID1675a297-4c71-47cb-af04-8a6fdca1c46f"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $propertiesFound := $record//*[local-name()='AbstractEX_GeographicExtent' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*[local-name()='extentTypeCode' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $propertyFound in $propertiesFound 
     return
       if ($propertyFound[(count(*)=0 and not(text())) or (count(child::*)=1 and ((child::*[data(@codeList) and not(data(@codeListValue))]) or (child::*[local-name()='CharacterString' and namespace-uri()='http://www.isotc211.org/2005/gco' and not(text())])))]) then
         local:addMessage('TR.missingTypeContentError', map { 'localName': 'extentTypeCode', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDa3022be7-5606-4851-b9e7-efff2f921ef6">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_DataIdentification' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDab1b1beb-911f-4564-a63a-bfb42775348e">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'MD_DataIdentification' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EIDa3022be7-5606-4851-b9e7-efff2f921ef6"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID3eeddbfa-1040-47df-afa5-f7a0823373f9">
              <label>label</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'MD_DataIdentification' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID649ffde5-7636-4303-b42f-46bffc6df0f3">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'status' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0 and a maximum cardinality of 1]]></description>
                  <parent ref="EID3eeddbfa-1040-47df-afa5-f7a0823373f9"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='MD_DataIdentification' and namespace-uri()='http://www.isotc211.org/2005/gmd']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='status' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0) or ($propertyCount gt 1)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'MD_DataIdentification', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EIDf5bca723-327c-4e60-bf66-f036bee22393">
              <label>ISO-Element Nr. 33: Schlüsselwort</label>
              <description><![CDATA[Pflichtelement: mindestens ein Schlüsselwort muss vorhanden sein.]]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EID4fa7c71f-30ba-48b9-8882-a881b39b23c4">
                  <label>TestAssertion</label>
                  <description><![CDATA[The property with localName 'descriptiveKeywords' and namespace 'http://www.isotc211.org/2005/gmd' should have a minimum cardinality of 0]]></description>
                  <parent ref="EIDf5bca723-327c-4e60-bf66-f036bee22393"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
  (for $record in $db
     let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
     let $typesFound := $record//*[local-name()='SV_ServiceIdentification' and namespace-uri()='http://www.isotc211.org/2005/srv']
     for $typeFound in $typesFound 
       let $propertyCount := count($typeFound/*[local-name()='descriptiveKeywords' and namespace-uri()='http://www.isotc211.org/2005/gmd']) 
       return
       if (($propertyCount lt 0)) then
        local:addMessage('TR.invalidPropertyCardinalityError', map { 'localName': 'SV_ServiceIdentification', 'namespace': 'http://www.isotc211.org/2005/srv', 'fileIdentifier': $rid, 'filename': local:filename($record), 'invalidCardinality': $propertyCount })
       else ()
  )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
            <TestStep id="EID5b2b8686-356a-4e01-b86a-cdb9762ef17c">
              <label>Mandatory type test</label>
              <description><![CDATA[Constraints TestCase for Feature Type with name 'CI_Citation' and namespace 'http://www.isotc211.org/2005/gmd']]></description>
              <parent ref="EID331ba99a-adde-440d-9bb0-68ecb294eb13"/>
              <statementForExecution>not applicable</statementForExecution>
              <testItemType ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
              <testAssertions>
                <TestAssertion id="EIDfe735b74-83c4-432c-a8f5-df1b51f1cae9">
                  <label>TestAssertion</label>
                  <description><![CDATA[The type with localName 'CI_Citation' and namespace 'http://www.isotc211.org/2005/gmd' should be present in the file]]></description>
                  <parent ref="EID5b2b8686-356a-4e01-b86a-cdb9762ef17c"/>
                  <expectedResult>NOT_APPLICABLE</expectedResult>
                  <expression>let $messages :=
    (for $record in $db
       let $rid := $record//*[local-name()='fileIdentifier' and namespace-uri()='http://www.isotc211.org/2005/gmd']/*/text()
       let $title := count($record//*[local-name()='CI_Citation' and namespace-uri()='http://www.isotc211.org/2005/gmd'])
       return
       if (not($title)) then
        local:addMessage('TR.missingMandatoryTypeError', map { 'localName': 'CI_Citation', 'namespace': 'http://www.isotc211.org/2005/gmd', 'fileIdentifier': $rid, 'filename': local:filename($record) })
       else ()
    )[position() le $limitErrors]
return
(if ($messages) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.recordsWithErrors', count(fn:distinct-values($messages//etf:argument[@token='id']/text()))),
 $messages)</expression>
                  <testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
                  <translationTemplates>
                    <translationTemplate ref="TR.recordsWithErrors"/>
                    <translationTemplate ref="TR.missingTypeContentError"/>
                    <translationTemplate ref="TR.missingMandatoryTypeError"/>
                    <translationTemplate ref="TR.invalidPropertyCardinalityError"/>
                    <translationTemplate ref="TR.invalidPropertyValueError"/>
                  </translationTemplates>
                </TestAssertion>
              </testAssertions>
            </TestStep>
          </testSteps>
        </TestCase>
      </testCases>
    </TestModule>
  </testModules>
</ExecutableTestSuite>
